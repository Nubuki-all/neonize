// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: Neonize.proto

package neonize

import (
	defproto "github.com/krypton-byte/neonize/defproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GroupInfo_GroupMemberAddMode int32

const (
	GroupInfo_GroupMemberAddModeAdmin GroupInfo_GroupMemberAddMode = 1
)

// Enum value maps for GroupInfo_GroupMemberAddMode.
var (
	GroupInfo_GroupMemberAddMode_name = map[int32]string{
		1: "GroupMemberAddModeAdmin",
	}
	GroupInfo_GroupMemberAddMode_value = map[string]int32{
		"GroupMemberAddModeAdmin": 1,
	}
)

func (x GroupInfo_GroupMemberAddMode) Enum() *GroupInfo_GroupMemberAddMode {
	p := new(GroupInfo_GroupMemberAddMode)
	*p = x
	return p
}

func (x GroupInfo_GroupMemberAddMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupInfo_GroupMemberAddMode) Descriptor() protoreflect.EnumDescriptor {
	return file_Neonize_proto_enumTypes[0].Descriptor()
}

func (GroupInfo_GroupMemberAddMode) Type() protoreflect.EnumType {
	return &file_Neonize_proto_enumTypes[0]
}

func (x GroupInfo_GroupMemberAddMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GroupInfo_GroupMemberAddMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GroupInfo_GroupMemberAddMode(num)
	return nil
}

// Deprecated: Use GroupInfo_GroupMemberAddMode.Descriptor instead.
func (GroupInfo_GroupMemberAddMode) EnumDescriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{20, 0}
}

type WrappedNewsletterState_NewsletterState int32

const (
	WrappedNewsletterState_ACTIVE       WrappedNewsletterState_NewsletterState = 1
	WrappedNewsletterState_SUSPENDED    WrappedNewsletterState_NewsletterState = 2
	WrappedNewsletterState_GEOSUSPENDED WrappedNewsletterState_NewsletterState = 3
)

// Enum value maps for WrappedNewsletterState_NewsletterState.
var (
	WrappedNewsletterState_NewsletterState_name = map[int32]string{
		1: "ACTIVE",
		2: "SUSPENDED",
		3: "GEOSUSPENDED",
	}
	WrappedNewsletterState_NewsletterState_value = map[string]int32{
		"ACTIVE":       1,
		"SUSPENDED":    2,
		"GEOSUSPENDED": 3,
	}
)

func (x WrappedNewsletterState_NewsletterState) Enum() *WrappedNewsletterState_NewsletterState {
	p := new(WrappedNewsletterState_NewsletterState)
	*p = x
	return p
}

func (x WrappedNewsletterState_NewsletterState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WrappedNewsletterState_NewsletterState) Descriptor() protoreflect.EnumDescriptor {
	return file_Neonize_proto_enumTypes[1].Descriptor()
}

func (WrappedNewsletterState_NewsletterState) Type() protoreflect.EnumType {
	return &file_Neonize_proto_enumTypes[1]
}

func (x WrappedNewsletterState_NewsletterState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *WrappedNewsletterState_NewsletterState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = WrappedNewsletterState_NewsletterState(num)
	return nil
}

// Deprecated: Use WrappedNewsletterState_NewsletterState.Descriptor instead.
func (WrappedNewsletterState_NewsletterState) EnumDescriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{45, 0}
}

type NewsletterReactionSettings_NewsletterReactionsMode int32

const (
	NewsletterReactionSettings_ALL       NewsletterReactionSettings_NewsletterReactionsMode = 1
	NewsletterReactionSettings_BASIC     NewsletterReactionSettings_NewsletterReactionsMode = 2
	NewsletterReactionSettings_NONE      NewsletterReactionSettings_NewsletterReactionsMode = 3
	NewsletterReactionSettings_BLOCKLIST NewsletterReactionSettings_NewsletterReactionsMode = 4
)

// Enum value maps for NewsletterReactionSettings_NewsletterReactionsMode.
var (
	NewsletterReactionSettings_NewsletterReactionsMode_name = map[int32]string{
		1: "ALL",
		2: "BASIC",
		3: "NONE",
		4: "BLOCKLIST",
	}
	NewsletterReactionSettings_NewsletterReactionsMode_value = map[string]int32{
		"ALL":       1,
		"BASIC":     2,
		"NONE":      3,
		"BLOCKLIST": 4,
	}
)

func (x NewsletterReactionSettings_NewsletterReactionsMode) Enum() *NewsletterReactionSettings_NewsletterReactionsMode {
	p := new(NewsletterReactionSettings_NewsletterReactionsMode)
	*p = x
	return p
}

func (x NewsletterReactionSettings_NewsletterReactionsMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NewsletterReactionSettings_NewsletterReactionsMode) Descriptor() protoreflect.EnumDescriptor {
	return file_Neonize_proto_enumTypes[2].Descriptor()
}

func (NewsletterReactionSettings_NewsletterReactionsMode) Type() protoreflect.EnumType {
	return &file_Neonize_proto_enumTypes[2]
}

func (x NewsletterReactionSettings_NewsletterReactionsMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NewsletterReactionSettings_NewsletterReactionsMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NewsletterReactionSettings_NewsletterReactionsMode(num)
	return nil
}

// Deprecated: Use NewsletterReactionSettings_NewsletterReactionsMode.Descriptor instead.
func (NewsletterReactionSettings_NewsletterReactionsMode) EnumDescriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{48, 0}
}

type NewsletterThreadMetadata_NewsletterVerificationState int32

const (
	NewsletterThreadMetadata_VERIFIED   NewsletterThreadMetadata_NewsletterVerificationState = 1
	NewsletterThreadMetadata_UNVERIFIED NewsletterThreadMetadata_NewsletterVerificationState = 2
)

// Enum value maps for NewsletterThreadMetadata_NewsletterVerificationState.
var (
	NewsletterThreadMetadata_NewsletterVerificationState_name = map[int32]string{
		1: "VERIFIED",
		2: "UNVERIFIED",
	}
	NewsletterThreadMetadata_NewsletterVerificationState_value = map[string]int32{
		"VERIFIED":   1,
		"UNVERIFIED": 2,
	}
)

func (x NewsletterThreadMetadata_NewsletterVerificationState) Enum() *NewsletterThreadMetadata_NewsletterVerificationState {
	p := new(NewsletterThreadMetadata_NewsletterVerificationState)
	*p = x
	return p
}

func (x NewsletterThreadMetadata_NewsletterVerificationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NewsletterThreadMetadata_NewsletterVerificationState) Descriptor() protoreflect.EnumDescriptor {
	return file_Neonize_proto_enumTypes[3].Descriptor()
}

func (NewsletterThreadMetadata_NewsletterVerificationState) Type() protoreflect.EnumType {
	return &file_Neonize_proto_enumTypes[3]
}

func (x NewsletterThreadMetadata_NewsletterVerificationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NewsletterThreadMetadata_NewsletterVerificationState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NewsletterThreadMetadata_NewsletterVerificationState(num)
	return nil
}

// Deprecated: Use NewsletterThreadMetadata_NewsletterVerificationState.Descriptor instead.
func (NewsletterThreadMetadata_NewsletterVerificationState) EnumDescriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{50, 0}
}

type NewsletterViewerMetadata_NewsletterMuteState int32

const (
	NewsletterViewerMetadata_ON  NewsletterViewerMetadata_NewsletterMuteState = 1
	NewsletterViewerMetadata_OFF NewsletterViewerMetadata_NewsletterMuteState = 2
)

// Enum value maps for NewsletterViewerMetadata_NewsletterMuteState.
var (
	NewsletterViewerMetadata_NewsletterMuteState_name = map[int32]string{
		1: "ON",
		2: "OFF",
	}
	NewsletterViewerMetadata_NewsletterMuteState_value = map[string]int32{
		"ON":  1,
		"OFF": 2,
	}
)

func (x NewsletterViewerMetadata_NewsletterMuteState) Enum() *NewsletterViewerMetadata_NewsletterMuteState {
	p := new(NewsletterViewerMetadata_NewsletterMuteState)
	*p = x
	return p
}

func (x NewsletterViewerMetadata_NewsletterMuteState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NewsletterViewerMetadata_NewsletterMuteState) Descriptor() protoreflect.EnumDescriptor {
	return file_Neonize_proto_enumTypes[4].Descriptor()
}

func (NewsletterViewerMetadata_NewsletterMuteState) Type() protoreflect.EnumType {
	return &file_Neonize_proto_enumTypes[4]
}

func (x NewsletterViewerMetadata_NewsletterMuteState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NewsletterViewerMetadata_NewsletterMuteState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NewsletterViewerMetadata_NewsletterMuteState(num)
	return nil
}

// Deprecated: Use NewsletterViewerMetadata_NewsletterMuteState.Descriptor instead.
func (NewsletterViewerMetadata_NewsletterMuteState) EnumDescriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{51, 0}
}

type NewsletterViewerMetadata_NewsletterRole int32

const (
	NewsletterViewerMetadata_SUBSCRIBER NewsletterViewerMetadata_NewsletterRole = 1
	NewsletterViewerMetadata_GUEST      NewsletterViewerMetadata_NewsletterRole = 2
	NewsletterViewerMetadata_ADMIN      NewsletterViewerMetadata_NewsletterRole = 3
	NewsletterViewerMetadata_OWNER      NewsletterViewerMetadata_NewsletterRole = 4
)

// Enum value maps for NewsletterViewerMetadata_NewsletterRole.
var (
	NewsletterViewerMetadata_NewsletterRole_name = map[int32]string{
		1: "SUBSCRIBER",
		2: "GUEST",
		3: "ADMIN",
		4: "OWNER",
	}
	NewsletterViewerMetadata_NewsletterRole_value = map[string]int32{
		"SUBSCRIBER": 1,
		"GUEST":      2,
		"ADMIN":      3,
		"OWNER":      4,
	}
)

func (x NewsletterViewerMetadata_NewsletterRole) Enum() *NewsletterViewerMetadata_NewsletterRole {
	p := new(NewsletterViewerMetadata_NewsletterRole)
	*p = x
	return p
}

func (x NewsletterViewerMetadata_NewsletterRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NewsletterViewerMetadata_NewsletterRole) Descriptor() protoreflect.EnumDescriptor {
	return file_Neonize_proto_enumTypes[5].Descriptor()
}

func (NewsletterViewerMetadata_NewsletterRole) Type() protoreflect.EnumType {
	return &file_Neonize_proto_enumTypes[5]
}

func (x NewsletterViewerMetadata_NewsletterRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NewsletterViewerMetadata_NewsletterRole) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NewsletterViewerMetadata_NewsletterRole(num)
	return nil
}

// Deprecated: Use NewsletterViewerMetadata_NewsletterRole.Descriptor instead.
func (NewsletterViewerMetadata_NewsletterRole) EnumDescriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{51, 1}
}

type PrivacySettings_PrivacySetting int32

const (
	PrivacySettings_UNDEFINED         PrivacySettings_PrivacySetting = 1
	PrivacySettings_ALL               PrivacySettings_PrivacySetting = 2
	PrivacySettings_CONTACTS          PrivacySettings_PrivacySetting = 3
	PrivacySettings_CONTACT_BLACKLIST PrivacySettings_PrivacySetting = 4
	PrivacySettings_MATCH_LAST_SEEN   PrivacySettings_PrivacySetting = 5
	PrivacySettings_KNOWN             PrivacySettings_PrivacySetting = 6
	PrivacySettings_NONE              PrivacySettings_PrivacySetting = 7
)

// Enum value maps for PrivacySettings_PrivacySetting.
var (
	PrivacySettings_PrivacySetting_name = map[int32]string{
		1: "UNDEFINED",
		2: "ALL",
		3: "CONTACTS",
		4: "CONTACT_BLACKLIST",
		5: "MATCH_LAST_SEEN",
		6: "KNOWN",
		7: "NONE",
	}
	PrivacySettings_PrivacySetting_value = map[string]int32{
		"UNDEFINED":         1,
		"ALL":               2,
		"CONTACTS":          3,
		"CONTACT_BLACKLIST": 4,
		"MATCH_LAST_SEEN":   5,
		"KNOWN":             6,
		"NONE":              7,
	}
)

func (x PrivacySettings_PrivacySetting) Enum() *PrivacySettings_PrivacySetting {
	p := new(PrivacySettings_PrivacySetting)
	*p = x
	return p
}

func (x PrivacySettings_PrivacySetting) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrivacySettings_PrivacySetting) Descriptor() protoreflect.EnumDescriptor {
	return file_Neonize_proto_enumTypes[6].Descriptor()
}

func (PrivacySettings_PrivacySetting) Type() protoreflect.EnumType {
	return &file_Neonize_proto_enumTypes[6]
}

func (x PrivacySettings_PrivacySetting) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PrivacySettings_PrivacySetting) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PrivacySettings_PrivacySetting(num)
	return nil
}

// Deprecated: Use PrivacySettings_PrivacySetting.Descriptor instead.
func (PrivacySettings_PrivacySetting) EnumDescriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{57, 0}
}

// types
type JID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User       *string `protobuf:"bytes,1,req,name=User" json:"User,omitempty"`
	RawAgent   *uint32 `protobuf:"varint,2,req,name=RawAgent" json:"RawAgent,omitempty"`
	Device     *uint32 `protobuf:"varint,3,req,name=Device" json:"Device,omitempty"`
	Integrator *uint32 `protobuf:"varint,4,req,name=Integrator" json:"Integrator,omitempty"`
	Server     *string `protobuf:"bytes,5,req,name=Server" json:"Server,omitempty"`
	IsEmpty    *bool   `protobuf:"varint,6,req,name=IsEmpty" json:"IsEmpty,omitempty"`
}

func (x *JID) Reset() {
	*x = JID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JID) ProtoMessage() {}

func (x *JID) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JID.ProtoReflect.Descriptor instead.
func (*JID) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{0}
}

func (x *JID) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *JID) GetRawAgent() uint32 {
	if x != nil && x.RawAgent != nil {
		return *x.RawAgent
	}
	return 0
}

func (x *JID) GetDevice() uint32 {
	if x != nil && x.Device != nil {
		return *x.Device
	}
	return 0
}

func (x *JID) GetIntegrator() uint32 {
	if x != nil && x.Integrator != nil {
		return *x.Integrator
	}
	return 0
}

func (x *JID) GetServer() string {
	if x != nil && x.Server != nil {
		return *x.Server
	}
	return ""
}

func (x *JID) GetIsEmpty() bool {
	if x != nil && x.IsEmpty != nil {
		return *x.IsEmpty
	}
	return false
}

type MessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageSource  *MessageSource  `protobuf:"bytes,1,req,name=MessageSource" json:"MessageSource,omitempty"`
	ID             *string         `protobuf:"bytes,2,req,name=ID" json:"ID,omitempty"`
	ServerID       *int64          `protobuf:"varint,3,req,name=ServerID" json:"ServerID,omitempty"`
	Type           *string         `protobuf:"bytes,4,req,name=Type" json:"Type,omitempty"`
	Pushname       *string         `protobuf:"bytes,5,req,name=Pushname" json:"Pushname,omitempty"`
	Timestamp      *int64          `protobuf:"varint,6,req,name=Timestamp" json:"Timestamp,omitempty"`
	Category       *string         `protobuf:"bytes,7,req,name=Category" json:"Category,omitempty"`
	Multicast      *bool           `protobuf:"varint,8,req,name=Multicast" json:"Multicast,omitempty"`
	MediaType      *string         `protobuf:"bytes,9,req,name=MediaType" json:"MediaType,omitempty"`
	Edit           *string         `protobuf:"bytes,10,req,name=Edit" json:"Edit,omitempty"` //enum
	VerifiedName   *VerifiedName   `protobuf:"bytes,11,opt,name=VerifiedName" json:"VerifiedName,omitempty"`
	DeviceSentMeta *DeviceSentMeta `protobuf:"bytes,12,opt,name=DeviceSentMeta" json:"DeviceSentMeta,omitempty"`
}

func (x *MessageInfo) Reset() {
	*x = MessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInfo) ProtoMessage() {}

func (x *MessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInfo.ProtoReflect.Descriptor instead.
func (*MessageInfo) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{1}
}

func (x *MessageInfo) GetMessageSource() *MessageSource {
	if x != nil {
		return x.MessageSource
	}
	return nil
}

func (x *MessageInfo) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *MessageInfo) GetServerID() int64 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *MessageInfo) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *MessageInfo) GetPushname() string {
	if x != nil && x.Pushname != nil {
		return *x.Pushname
	}
	return ""
}

func (x *MessageInfo) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *MessageInfo) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *MessageInfo) GetMulticast() bool {
	if x != nil && x.Multicast != nil {
		return *x.Multicast
	}
	return false
}

func (x *MessageInfo) GetMediaType() string {
	if x != nil && x.MediaType != nil {
		return *x.MediaType
	}
	return ""
}

func (x *MessageInfo) GetEdit() string {
	if x != nil && x.Edit != nil {
		return *x.Edit
	}
	return ""
}

func (x *MessageInfo) GetVerifiedName() *VerifiedName {
	if x != nil {
		return x.VerifiedName
	}
	return nil
}

func (x *MessageInfo) GetDeviceSentMeta() *DeviceSentMeta {
	if x != nil {
		return x.DeviceSentMeta
	}
	return nil
}

type UploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url           *string `protobuf:"bytes,1,req,name=url" json:"url,omitempty"`
	DirectPath    *string `protobuf:"bytes,2,req,name=DirectPath" json:"DirectPath,omitempty"`
	Handle        *string `protobuf:"bytes,3,req,name=Handle" json:"Handle,omitempty"`
	MediaKey      []byte  `protobuf:"bytes,4,req,name=MediaKey" json:"MediaKey,omitempty"`
	FileEncSHA256 []byte  `protobuf:"bytes,5,req,name=FileEncSHA256" json:"FileEncSHA256,omitempty"`
	FileSHA256    []byte  `protobuf:"bytes,6,req,name=FileSHA256" json:"FileSHA256,omitempty"`
	FileLength    *uint32 `protobuf:"varint,7,req,name=FileLength" json:"FileLength,omitempty"`
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{2}
}

func (x *UploadResponse) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *UploadResponse) GetDirectPath() string {
	if x != nil && x.DirectPath != nil {
		return *x.DirectPath
	}
	return ""
}

func (x *UploadResponse) GetHandle() string {
	if x != nil && x.Handle != nil {
		return *x.Handle
	}
	return ""
}

func (x *UploadResponse) GetMediaKey() []byte {
	if x != nil {
		return x.MediaKey
	}
	return nil
}

func (x *UploadResponse) GetFileEncSHA256() []byte {
	if x != nil {
		return x.FileEncSHA256
	}
	return nil
}

func (x *UploadResponse) GetFileSHA256() []byte {
	if x != nil {
		return x.FileSHA256
	}
	return nil
}

func (x *UploadResponse) GetFileLength() uint32 {
	if x != nil && x.FileLength != nil {
		return *x.FileLength
	}
	return 0
}

type MessageSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chat               *JID  `protobuf:"bytes,1,req,name=Chat" json:"Chat,omitempty"`
	Sender             *JID  `protobuf:"bytes,2,req,name=Sender" json:"Sender,omitempty"`
	IsFromMe           *bool `protobuf:"varint,3,req,name=IsFromMe" json:"IsFromMe,omitempty"`
	IsGroup            *bool `protobuf:"varint,4,req,name=IsGroup" json:"IsGroup,omitempty"`
	BroadcastListOwner *JID  `protobuf:"bytes,5,req,name=BroadcastListOwner" json:"BroadcastListOwner,omitempty"`
}

func (x *MessageSource) Reset() {
	*x = MessageSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSource) ProtoMessage() {}

func (x *MessageSource) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSource.ProtoReflect.Descriptor instead.
func (*MessageSource) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{3}
}

func (x *MessageSource) GetChat() *JID {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *MessageSource) GetSender() *JID {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *MessageSource) GetIsFromMe() bool {
	if x != nil && x.IsFromMe != nil {
		return *x.IsFromMe
	}
	return false
}

func (x *MessageSource) GetIsGroup() bool {
	if x != nil && x.IsGroup != nil {
		return *x.IsGroup
	}
	return false
}

func (x *MessageSource) GetBroadcastListOwner() *JID {
	if x != nil {
		return x.BroadcastListOwner
	}
	return nil
}

type DeviceSentMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationJID *string `protobuf:"bytes,1,req,name=DestinationJID" json:"DestinationJID,omitempty"`
	Phash          *string `protobuf:"bytes,2,req,name=Phash" json:"Phash,omitempty"`
}

func (x *DeviceSentMeta) Reset() {
	*x = DeviceSentMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceSentMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceSentMeta) ProtoMessage() {}

func (x *DeviceSentMeta) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceSentMeta.ProtoReflect.Descriptor instead.
func (*DeviceSentMeta) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{4}
}

func (x *DeviceSentMeta) GetDestinationJID() string {
	if x != nil && x.DestinationJID != nil {
		return *x.DestinationJID
	}
	return ""
}

func (x *DeviceSentMeta) GetPhash() string {
	if x != nil && x.Phash != nil {
		return *x.Phash
	}
	return ""
}

// }
type VerifiedName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certificate *defproto.VerifiedNameCertificate         `protobuf:"bytes,1,opt,name=Certificate" json:"Certificate,omitempty"`
	Details     *defproto.VerifiedNameCertificate_Details `protobuf:"bytes,2,opt,name=Details" json:"Details,omitempty"`
}

func (x *VerifiedName) Reset() {
	*x = VerifiedName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifiedName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifiedName) ProtoMessage() {}

func (x *VerifiedName) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifiedName.ProtoReflect.Descriptor instead.
func (*VerifiedName) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{5}
}

func (x *VerifiedName) GetCertificate() *defproto.VerifiedNameCertificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *VerifiedName) GetDetails() *defproto.VerifiedNameCertificate_Details {
	if x != nil {
		return x.Details
	}
	return nil
}

type IsOnWhatsAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query        *string       `protobuf:"bytes,1,req,name=Query" json:"Query,omitempty"`
	JID          *JID          `protobuf:"bytes,2,req,name=JID" json:"JID,omitempty"`
	IsIn         *bool         `protobuf:"varint,3,req,name=IsIn" json:"IsIn,omitempty"`
	VerifiedName *VerifiedName `protobuf:"bytes,4,opt,name=VerifiedName" json:"VerifiedName,omitempty"`
}

func (x *IsOnWhatsAppResponse) Reset() {
	*x = IsOnWhatsAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsOnWhatsAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsOnWhatsAppResponse) ProtoMessage() {}

func (x *IsOnWhatsAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsOnWhatsAppResponse.ProtoReflect.Descriptor instead.
func (*IsOnWhatsAppResponse) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{6}
}

func (x *IsOnWhatsAppResponse) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *IsOnWhatsAppResponse) GetJID() *JID {
	if x != nil {
		return x.JID
	}
	return nil
}

func (x *IsOnWhatsAppResponse) GetIsIn() bool {
	if x != nil && x.IsIn != nil {
		return *x.IsIn
	}
	return false
}

func (x *IsOnWhatsAppResponse) GetVerifiedName() *VerifiedName {
	if x != nil {
		return x.VerifiedName
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerifiedName *VerifiedName `protobuf:"bytes,1,opt,name=VerifiedName" json:"VerifiedName,omitempty"`
	Status       *string       `protobuf:"bytes,2,req,name=Status" json:"Status,omitempty"`
	PictureID    *string       `protobuf:"bytes,3,req,name=PictureID" json:"PictureID,omitempty"`
	Devices      []*JID        `protobuf:"bytes,4,rep,name=Devices" json:"Devices,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{7}
}

func (x *UserInfo) GetVerifiedName() *VerifiedName {
	if x != nil {
		return x.VerifiedName
	}
	return nil
}

func (x *UserInfo) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *UserInfo) GetPictureID() string {
	if x != nil && x.PictureID != nil {
		return *x.PictureID
	}
	return ""
}

func (x *UserInfo) GetDevices() []*JID {
	if x != nil {
		return x.Devices
	}
	return nil
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JID           *JID    `protobuf:"bytes,1,opt,name=JID" json:"JID,omitempty"`
	Platform      *string `protobuf:"bytes,2,req,name=Platform" json:"Platform,omitempty"`
	BussinessName *string `protobuf:"bytes,3,req,name=BussinessName" json:"BussinessName,omitempty"`
	PushName      *string `protobuf:"bytes,4,req,name=PushName" json:"PushName,omitempty"`
	Initialized   *bool   `protobuf:"varint,5,req,name=Initialized" json:"Initialized,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{8}
}

func (x *Device) GetJID() *JID {
	if x != nil {
		return x.JID
	}
	return nil
}

func (x *Device) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

func (x *Device) GetBussinessName() string {
	if x != nil && x.BussinessName != nil {
		return *x.BussinessName
	}
	return ""
}

func (x *Device) GetPushName() string {
	if x != nil && x.PushName != nil {
		return *x.PushName
	}
	return ""
}

func (x *Device) GetInitialized() bool {
	if x != nil && x.Initialized != nil {
		return *x.Initialized
	}
	return false
}

// GROUP
type GroupName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	NameSetAt *int64  `protobuf:"varint,2,req,name=NameSetAt" json:"NameSetAt,omitempty"`
	NameSetBy *JID    `protobuf:"bytes,3,req,name=NameSetBy" json:"NameSetBy,omitempty"`
}

func (x *GroupName) Reset() {
	*x = GroupName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupName) ProtoMessage() {}

func (x *GroupName) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupName.ProtoReflect.Descriptor instead.
func (*GroupName) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{9}
}

func (x *GroupName) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GroupName) GetNameSetAt() int64 {
	if x != nil && x.NameSetAt != nil {
		return *x.NameSetAt
	}
	return 0
}

func (x *GroupName) GetNameSetBy() *JID {
	if x != nil {
		return x.NameSetBy
	}
	return nil
}

type GroupTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic        *string `protobuf:"bytes,1,req,name=Topic" json:"Topic,omitempty"`
	TopicID      *string `protobuf:"bytes,2,req,name=TopicID" json:"TopicID,omitempty"`
	TopicSetAt   *int64  `protobuf:"varint,3,req,name=TopicSetAt" json:"TopicSetAt,omitempty"`
	TopicSetBy   *JID    `protobuf:"bytes,4,req,name=TopicSetBy" json:"TopicSetBy,omitempty"`
	TopicDeleted *bool   `protobuf:"varint,5,req,name=TopicDeleted" json:"TopicDeleted,omitempty"`
}

func (x *GroupTopic) Reset() {
	*x = GroupTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupTopic) ProtoMessage() {}

func (x *GroupTopic) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupTopic.ProtoReflect.Descriptor instead.
func (*GroupTopic) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{10}
}

func (x *GroupTopic) GetTopic() string {
	if x != nil && x.Topic != nil {
		return *x.Topic
	}
	return ""
}

func (x *GroupTopic) GetTopicID() string {
	if x != nil && x.TopicID != nil {
		return *x.TopicID
	}
	return ""
}

func (x *GroupTopic) GetTopicSetAt() int64 {
	if x != nil && x.TopicSetAt != nil {
		return *x.TopicSetAt
	}
	return 0
}

func (x *GroupTopic) GetTopicSetBy() *JID {
	if x != nil {
		return x.TopicSetBy
	}
	return nil
}

func (x *GroupTopic) GetTopicDeleted() bool {
	if x != nil && x.TopicDeleted != nil {
		return *x.TopicDeleted
	}
	return false
}

type GroupLocked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLocked *bool `protobuf:"varint,1,req,name=isLocked" json:"isLocked,omitempty"`
}

func (x *GroupLocked) Reset() {
	*x = GroupLocked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupLocked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupLocked) ProtoMessage() {}

func (x *GroupLocked) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupLocked.ProtoReflect.Descriptor instead.
func (*GroupLocked) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{11}
}

func (x *GroupLocked) GetIsLocked() bool {
	if x != nil && x.IsLocked != nil {
		return *x.IsLocked
	}
	return false
}

type GroupAnnounce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAnnounce        *bool   `protobuf:"varint,1,req,name=IsAnnounce" json:"IsAnnounce,omitempty"`
	AnnounceVersionID *string `protobuf:"bytes,2,req,name=AnnounceVersionID" json:"AnnounceVersionID,omitempty"`
}

func (x *GroupAnnounce) Reset() {
	*x = GroupAnnounce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupAnnounce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupAnnounce) ProtoMessage() {}

func (x *GroupAnnounce) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupAnnounce.ProtoReflect.Descriptor instead.
func (*GroupAnnounce) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{12}
}

func (x *GroupAnnounce) GetIsAnnounce() bool {
	if x != nil && x.IsAnnounce != nil {
		return *x.IsAnnounce
	}
	return false
}

func (x *GroupAnnounce) GetAnnounceVersionID() string {
	if x != nil && x.AnnounceVersionID != nil {
		return *x.AnnounceVersionID
	}
	return ""
}

type GroupEphemeral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEphemeral       *bool   `protobuf:"varint,1,req,name=IsEphemeral" json:"IsEphemeral,omitempty"`
	DisappearingTimer *uint32 `protobuf:"varint,2,req,name=DisappearingTimer" json:"DisappearingTimer,omitempty"`
}

func (x *GroupEphemeral) Reset() {
	*x = GroupEphemeral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupEphemeral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupEphemeral) ProtoMessage() {}

func (x *GroupEphemeral) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupEphemeral.ProtoReflect.Descriptor instead.
func (*GroupEphemeral) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{13}
}

func (x *GroupEphemeral) GetIsEphemeral() bool {
	if x != nil && x.IsEphemeral != nil {
		return *x.IsEphemeral
	}
	return false
}

func (x *GroupEphemeral) GetDisappearingTimer() uint32 {
	if x != nil && x.DisappearingTimer != nil {
		return *x.DisappearingTimer
	}
	return 0
}

type GroupIncognito struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsIncognito *bool `protobuf:"varint,1,req,name=IsIncognito" json:"IsIncognito,omitempty"`
}

func (x *GroupIncognito) Reset() {
	*x = GroupIncognito{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupIncognito) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupIncognito) ProtoMessage() {}

func (x *GroupIncognito) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupIncognito.ProtoReflect.Descriptor instead.
func (*GroupIncognito) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{14}
}

func (x *GroupIncognito) GetIsIncognito() bool {
	if x != nil && x.IsIncognito != nil {
		return *x.IsIncognito
	}
	return false
}

type GroupParent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsParent                      *bool   `protobuf:"varint,1,req,name=IsParent" json:"IsParent,omitempty"`
	DefaultMembershipApprovalMode *string `protobuf:"bytes,2,req,name=DefaultMembershipApprovalMode" json:"DefaultMembershipApprovalMode,omitempty"`
}

func (x *GroupParent) Reset() {
	*x = GroupParent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupParent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupParent) ProtoMessage() {}

func (x *GroupParent) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupParent.ProtoReflect.Descriptor instead.
func (*GroupParent) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{15}
}

func (x *GroupParent) GetIsParent() bool {
	if x != nil && x.IsParent != nil {
		return *x.IsParent
	}
	return false
}

func (x *GroupParent) GetDefaultMembershipApprovalMode() string {
	if x != nil && x.DefaultMembershipApprovalMode != nil {
		return *x.DefaultMembershipApprovalMode
	}
	return ""
}

type GroupLinkedParent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkedParentJID *JID `protobuf:"bytes,1,req,name=LinkedParentJID" json:"LinkedParentJID,omitempty"`
}

func (x *GroupLinkedParent) Reset() {
	*x = GroupLinkedParent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupLinkedParent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupLinkedParent) ProtoMessage() {}

func (x *GroupLinkedParent) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupLinkedParent.ProtoReflect.Descriptor instead.
func (*GroupLinkedParent) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{16}
}

func (x *GroupLinkedParent) GetLinkedParentJID() *JID {
	if x != nil {
		return x.LinkedParentJID
	}
	return nil
}

type GroupIsDefaultSub struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDefaultSubGroup *bool `protobuf:"varint,1,req,name=IsDefaultSubGroup" json:"IsDefaultSubGroup,omitempty"`
}

func (x *GroupIsDefaultSub) Reset() {
	*x = GroupIsDefaultSub{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupIsDefaultSub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupIsDefaultSub) ProtoMessage() {}

func (x *GroupIsDefaultSub) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupIsDefaultSub.ProtoReflect.Descriptor instead.
func (*GroupIsDefaultSub) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{17}
}

func (x *GroupIsDefaultSub) GetIsDefaultSubGroup() bool {
	if x != nil && x.IsDefaultSubGroup != nil {
		return *x.IsDefaultSubGroup
	}
	return false
}

type GroupParticipantAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       *string  `protobuf:"bytes,1,req,name=Code" json:"Code,omitempty"`
	Expiration *float32 `protobuf:"fixed32,2,req,name=Expiration" json:"Expiration,omitempty"`
}

func (x *GroupParticipantAddRequest) Reset() {
	*x = GroupParticipantAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupParticipantAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupParticipantAddRequest) ProtoMessage() {}

func (x *GroupParticipantAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupParticipantAddRequest.ProtoReflect.Descriptor instead.
func (*GroupParticipantAddRequest) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{18}
}

func (x *GroupParticipantAddRequest) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *GroupParticipantAddRequest) GetExpiration() float32 {
	if x != nil && x.Expiration != nil {
		return *x.Expiration
	}
	return 0
}

type GroupParticipant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JID          *JID                        `protobuf:"bytes,1,opt,name=JID" json:"JID,omitempty"`
	LID          *JID                        `protobuf:"bytes,2,req,name=LID" json:"LID,omitempty"`
	IsAdmin      *bool                       `protobuf:"varint,3,req,name=IsAdmin" json:"IsAdmin,omitempty"`
	IsSuperAdmin *bool                       `protobuf:"varint,4,req,name=IsSuperAdmin" json:"IsSuperAdmin,omitempty"`
	DisplayName  *string                     `protobuf:"bytes,5,req,name=DisplayName" json:"DisplayName,omitempty"`
	Error        *int32                      `protobuf:"varint,6,req,name=Error" json:"Error,omitempty"`
	AddRequest   *GroupParticipantAddRequest `protobuf:"bytes,7,opt,name=AddRequest" json:"AddRequest,omitempty"`
}

func (x *GroupParticipant) Reset() {
	*x = GroupParticipant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupParticipant) ProtoMessage() {}

func (x *GroupParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupParticipant.ProtoReflect.Descriptor instead.
func (*GroupParticipant) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{19}
}

func (x *GroupParticipant) GetJID() *JID {
	if x != nil {
		return x.JID
	}
	return nil
}

func (x *GroupParticipant) GetLID() *JID {
	if x != nil {
		return x.LID
	}
	return nil
}

func (x *GroupParticipant) GetIsAdmin() bool {
	if x != nil && x.IsAdmin != nil {
		return *x.IsAdmin
	}
	return false
}

func (x *GroupParticipant) GetIsSuperAdmin() bool {
	if x != nil && x.IsSuperAdmin != nil {
		return *x.IsSuperAdmin
	}
	return false
}

func (x *GroupParticipant) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GroupParticipant) GetError() int32 {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return 0
}

func (x *GroupParticipant) GetAddRequest() *GroupParticipantAddRequest {
	if x != nil {
		return x.AddRequest
	}
	return nil
}

type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerJID             *JID                `protobuf:"bytes,2,req,name=OwnerJID" json:"OwnerJID,omitempty"`
	JID                  *JID                `protobuf:"bytes,1,req,name=JID" json:"JID,omitempty"`
	GroupName            *GroupName          `protobuf:"bytes,3,req,name=GroupName" json:"GroupName,omitempty"`
	GroupTopic           *GroupTopic         `protobuf:"bytes,4,req,name=GroupTopic" json:"GroupTopic,omitempty"`
	GroupLocked          *GroupLocked        `protobuf:"bytes,5,req,name=GroupLocked" json:"GroupLocked,omitempty"`
	GroupAnnounce        *GroupAnnounce      `protobuf:"bytes,6,req,name=GroupAnnounce" json:"GroupAnnounce,omitempty"`
	GroupEphemeral       *GroupEphemeral     `protobuf:"bytes,7,req,name=GroupEphemeral" json:"GroupEphemeral,omitempty"`
	GroupIncognito       *GroupIncognito     `protobuf:"bytes,8,req,name=GroupIncognito" json:"GroupIncognito,omitempty"`
	GroupParent          *GroupParent        `protobuf:"bytes,9,req,name=GroupParent" json:"GroupParent,omitempty"`
	GroupLinkedParent    *GroupLinkedParent  `protobuf:"bytes,10,req,name=GroupLinkedParent" json:"GroupLinkedParent,omitempty"`
	GroupIsDefaultSub    *GroupIsDefaultSub  `protobuf:"bytes,11,req,name=GroupIsDefaultSub" json:"GroupIsDefaultSub,omitempty"`
	GroupCreated         *float32            `protobuf:"fixed32,12,req,name=GroupCreated" json:"GroupCreated,omitempty"`
	ParticipantVersionID *string             `protobuf:"bytes,13,req,name=ParticipantVersionID" json:"ParticipantVersionID,omitempty"`
	Participants         []*GroupParticipant `protobuf:"bytes,14,rep,name=Participants" json:"Participants,omitempty"`
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{20}
}

func (x *GroupInfo) GetOwnerJID() *JID {
	if x != nil {
		return x.OwnerJID
	}
	return nil
}

func (x *GroupInfo) GetJID() *JID {
	if x != nil {
		return x.JID
	}
	return nil
}

func (x *GroupInfo) GetGroupName() *GroupName {
	if x != nil {
		return x.GroupName
	}
	return nil
}

func (x *GroupInfo) GetGroupTopic() *GroupTopic {
	if x != nil {
		return x.GroupTopic
	}
	return nil
}

func (x *GroupInfo) GetGroupLocked() *GroupLocked {
	if x != nil {
		return x.GroupLocked
	}
	return nil
}

func (x *GroupInfo) GetGroupAnnounce() *GroupAnnounce {
	if x != nil {
		return x.GroupAnnounce
	}
	return nil
}

func (x *GroupInfo) GetGroupEphemeral() *GroupEphemeral {
	if x != nil {
		return x.GroupEphemeral
	}
	return nil
}

func (x *GroupInfo) GetGroupIncognito() *GroupIncognito {
	if x != nil {
		return x.GroupIncognito
	}
	return nil
}

func (x *GroupInfo) GetGroupParent() *GroupParent {
	if x != nil {
		return x.GroupParent
	}
	return nil
}

func (x *GroupInfo) GetGroupLinkedParent() *GroupLinkedParent {
	if x != nil {
		return x.GroupLinkedParent
	}
	return nil
}

func (x *GroupInfo) GetGroupIsDefaultSub() *GroupIsDefaultSub {
	if x != nil {
		return x.GroupIsDefaultSub
	}
	return nil
}

func (x *GroupInfo) GetGroupCreated() float32 {
	if x != nil && x.GroupCreated != nil {
		return *x.GroupCreated
	}
	return 0
}

func (x *GroupInfo) GetParticipantVersionID() string {
	if x != nil && x.ParticipantVersionID != nil {
		return *x.ParticipantVersionID
	}
	return ""
}

func (x *GroupInfo) GetParticipants() []*GroupParticipant {
	if x != nil {
		return x.Participants
	}
	return nil
}

type MessageDebugTimings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue           *int64 `protobuf:"varint,1,req,name=Queue" json:"Queue,omitempty"`
	Marshal_        *int64 `protobuf:"varint,2,req,name=Marshal" json:"Marshal,omitempty"`
	GetParticipants *int64 `protobuf:"varint,3,req,name=GetParticipants" json:"GetParticipants,omitempty"`
	GetDevices      *int64 `protobuf:"varint,4,req,name=GetDevices" json:"GetDevices,omitempty"`
	GroupEncrypt    *int64 `protobuf:"varint,5,req,name=GroupEncrypt" json:"GroupEncrypt,omitempty"`
	PeerEncrypt     *int64 `protobuf:"varint,6,req,name=PeerEncrypt" json:"PeerEncrypt,omitempty"`
	Send            *int64 `protobuf:"varint,7,req,name=Send" json:"Send,omitempty"`
	Resp            *int64 `protobuf:"varint,8,req,name=Resp" json:"Resp,omitempty"`
	Retry           *int64 `protobuf:"varint,9,req,name=Retry" json:"Retry,omitempty"`
}

func (x *MessageDebugTimings) Reset() {
	*x = MessageDebugTimings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageDebugTimings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDebugTimings) ProtoMessage() {}

func (x *MessageDebugTimings) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDebugTimings.ProtoReflect.Descriptor instead.
func (*MessageDebugTimings) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{21}
}

func (x *MessageDebugTimings) GetQueue() int64 {
	if x != nil && x.Queue != nil {
		return *x.Queue
	}
	return 0
}

func (x *MessageDebugTimings) GetMarshal_() int64 {
	if x != nil && x.Marshal_ != nil {
		return *x.Marshal_
	}
	return 0
}

func (x *MessageDebugTimings) GetGetParticipants() int64 {
	if x != nil && x.GetParticipants != nil {
		return *x.GetParticipants
	}
	return 0
}

func (x *MessageDebugTimings) GetGetDevices() int64 {
	if x != nil && x.GetDevices != nil {
		return *x.GetDevices
	}
	return 0
}

func (x *MessageDebugTimings) GetGroupEncrypt() int64 {
	if x != nil && x.GroupEncrypt != nil {
		return *x.GroupEncrypt
	}
	return 0
}

func (x *MessageDebugTimings) GetPeerEncrypt() int64 {
	if x != nil && x.PeerEncrypt != nil {
		return *x.PeerEncrypt
	}
	return 0
}

func (x *MessageDebugTimings) GetSend() int64 {
	if x != nil && x.Send != nil {
		return *x.Send
	}
	return 0
}

func (x *MessageDebugTimings) GetResp() int64 {
	if x != nil && x.Resp != nil {
		return *x.Resp
	}
	return 0
}

func (x *MessageDebugTimings) GetRetry() int64 {
	if x != nil && x.Retry != nil {
		return *x.Retry
	}
	return 0
}

type SendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp    *int64               `protobuf:"varint,1,req,name=Timestamp" json:"Timestamp,omitempty"`
	ID           *string              `protobuf:"bytes,2,req,name=ID" json:"ID,omitempty"`
	ServerID     *int64               `protobuf:"varint,3,req,name=ServerID" json:"ServerID,omitempty"`
	DebugTimings *MessageDebugTimings `protobuf:"bytes,4,req,name=DebugTimings" json:"DebugTimings,omitempty"`
}

func (x *SendResponse) Reset() {
	*x = SendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponse) ProtoMessage() {}

func (x *SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponse.ProtoReflect.Descriptor instead.
func (*SendResponse) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{22}
}

func (x *SendResponse) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *SendResponse) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *SendResponse) GetServerID() int64 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *SendResponse) GetDebugTimings() *MessageDebugTimings {
	if x != nil {
		return x.DebugTimings
	}
	return nil
}

type SendMessageReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        *string       `protobuf:"bytes,1,opt,name=Error" json:"Error,omitempty"`
	SendResponse *SendResponse `protobuf:"bytes,2,opt,name=SendResponse" json:"SendResponse,omitempty"`
}

func (x *SendMessageReturnFunction) Reset() {
	*x = SendMessageReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageReturnFunction) ProtoMessage() {}

func (x *SendMessageReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageReturnFunction.ProtoReflect.Descriptor instead.
func (*SendMessageReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{23}
}

func (x *SendMessageReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *SendMessageReturnFunction) GetSendResponse() *SendResponse {
	if x != nil {
		return x.SendResponse
	}
	return nil
}

// Function
type GetGroupInfoReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupInfo *GroupInfo `protobuf:"bytes,1,opt,name=GroupInfo" json:"GroupInfo,omitempty"`
	Error     *string    `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (x *GetGroupInfoReturnFunction) Reset() {
	*x = GetGroupInfoReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInfoReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInfoReturnFunction) ProtoMessage() {}

func (x *GetGroupInfoReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInfoReturnFunction.ProtoReflect.Descriptor instead.
func (*GetGroupInfoReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{24}
}

func (x *GetGroupInfoReturnFunction) GetGroupInfo() *GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

func (x *GetGroupInfoReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type JoinGroupWithLinkReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *string `protobuf:"bytes,1,opt,name=Error" json:"Error,omitempty"`
	Jid   *JID    `protobuf:"bytes,2,opt,name=Jid" json:"Jid,omitempty"`
}

func (x *JoinGroupWithLinkReturnFunction) Reset() {
	*x = JoinGroupWithLinkReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupWithLinkReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupWithLinkReturnFunction) ProtoMessage() {}

func (x *JoinGroupWithLinkReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupWithLinkReturnFunction.ProtoReflect.Descriptor instead.
func (*JoinGroupWithLinkReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{25}
}

func (x *JoinGroupWithLinkReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *JoinGroupWithLinkReturnFunction) GetJid() *JID {
	if x != nil {
		return x.Jid
	}
	return nil
}

type GetGroupInviteLinkReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteLink *string `protobuf:"bytes,1,opt,name=InviteLink" json:"InviteLink,omitempty"`
	Error      *string `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (x *GetGroupInviteLinkReturnFunction) Reset() {
	*x = GetGroupInviteLinkReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInviteLinkReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInviteLinkReturnFunction) ProtoMessage() {}

func (x *GetGroupInviteLinkReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInviteLinkReturnFunction.ProtoReflect.Descriptor instead.
func (*GetGroupInviteLinkReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{26}
}

func (x *GetGroupInviteLinkReturnFunction) GetInviteLink() string {
	if x != nil && x.InviteLink != nil {
		return *x.InviteLink
	}
	return ""
}

func (x *GetGroupInviteLinkReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type DownloadReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Binary []byte  `protobuf:"bytes,1,opt,name=Binary" json:"Binary,omitempty"`
	Error  *string `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (x *DownloadReturnFunction) Reset() {
	*x = DownloadReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadReturnFunction) ProtoMessage() {}

func (x *DownloadReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadReturnFunction.ProtoReflect.Descriptor instead.
func (*DownloadReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{27}
}

func (x *DownloadReturnFunction) GetBinary() []byte {
	if x != nil {
		return x.Binary
	}
	return nil
}

func (x *DownloadReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type UploadReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadResponse *UploadResponse `protobuf:"bytes,1,opt,name=UploadResponse" json:"UploadResponse,omitempty"`
	Error          *string         `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (x *UploadReturnFunction) Reset() {
	*x = UploadReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadReturnFunction) ProtoMessage() {}

func (x *UploadReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadReturnFunction.ProtoReflect.Descriptor instead.
func (*UploadReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{28}
}

func (x *UploadReturnFunction) GetUploadResponse() *UploadResponse {
	if x != nil {
		return x.UploadResponse
	}
	return nil
}

func (x *UploadReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type SetGroupPhotoReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PictureID *string `protobuf:"bytes,1,req,name=PictureID" json:"PictureID,omitempty"`
	Error     *string `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (x *SetGroupPhotoReturnFunction) Reset() {
	*x = SetGroupPhotoReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupPhotoReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupPhotoReturnFunction) ProtoMessage() {}

func (x *SetGroupPhotoReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupPhotoReturnFunction.ProtoReflect.Descriptor instead.
func (*SetGroupPhotoReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{29}
}

func (x *SetGroupPhotoReturnFunction) GetPictureID() string {
	if x != nil && x.PictureID != nil {
		return *x.PictureID
	}
	return ""
}

func (x *SetGroupPhotoReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type IsOnWhatsAppReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOnWhatsAppResponse []*IsOnWhatsAppResponse `protobuf:"bytes,1,rep,name=IsOnWhatsAppResponse" json:"IsOnWhatsAppResponse,omitempty"`
	Error                *string                 `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (x *IsOnWhatsAppReturnFunction) Reset() {
	*x = IsOnWhatsAppReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsOnWhatsAppReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsOnWhatsAppReturnFunction) ProtoMessage() {}

func (x *IsOnWhatsAppReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsOnWhatsAppReturnFunction.ProtoReflect.Descriptor instead.
func (*IsOnWhatsAppReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{30}
}

func (x *IsOnWhatsAppReturnFunction) GetIsOnWhatsAppResponse() []*IsOnWhatsAppResponse {
	if x != nil {
		return x.IsOnWhatsAppResponse
	}
	return nil
}

func (x *IsOnWhatsAppReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type GetUserInfoSingleReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JID      *JID      `protobuf:"bytes,1,opt,name=JID" json:"JID,omitempty"`
	UserInfo *UserInfo `protobuf:"bytes,2,opt,name=UserInfo" json:"UserInfo,omitempty"`
}

func (x *GetUserInfoSingleReturnFunction) Reset() {
	*x = GetUserInfoSingleReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoSingleReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoSingleReturnFunction) ProtoMessage() {}

func (x *GetUserInfoSingleReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoSingleReturnFunction.ProtoReflect.Descriptor instead.
func (*GetUserInfoSingleReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{31}
}

func (x *GetUserInfoSingleReturnFunction) GetJID() *JID {
	if x != nil {
		return x.JID
	}
	return nil
}

func (x *GetUserInfoSingleReturnFunction) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type GetUserInfoReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsersInfo []*GetUserInfoSingleReturnFunction `protobuf:"bytes,1,rep,name=UsersInfo" json:"UsersInfo,omitempty"`
	Error     *string                            `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (x *GetUserInfoReturnFunction) Reset() {
	*x = GetUserInfoReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReturnFunction) ProtoMessage() {}

func (x *GetUserInfoReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReturnFunction.ProtoReflect.Descriptor instead.
func (*GetUserInfoReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{32}
}

func (x *GetUserInfoReturnFunction) GetUsersInfo() []*GetUserInfoSingleReturnFunction {
	if x != nil {
		return x.UsersInfo
	}
	return nil
}

func (x *GetUserInfoReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type BuildPollVoteReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PollVote *defproto.Message `protobuf:"bytes,1,opt,name=PollVote" json:"PollVote,omitempty"`
	Error    *string           `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (x *BuildPollVoteReturnFunction) Reset() {
	*x = BuildPollVoteReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildPollVoteReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildPollVoteReturnFunction) ProtoMessage() {}

func (x *BuildPollVoteReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildPollVoteReturnFunction.ProtoReflect.Descriptor instead.
func (*BuildPollVoteReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{33}
}

func (x *BuildPollVoteReturnFunction) GetPollVote() *defproto.Message {
	if x != nil {
		return x.PollVote
	}
	return nil
}

func (x *BuildPollVoteReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type CreateNewsLetterReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewsletterMetadata *NewsletterMetadata `protobuf:"bytes,1,opt,name=NewsletterMetadata" json:"NewsletterMetadata,omitempty"`
	Error              *string             `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (x *CreateNewsLetterReturnFunction) Reset() {
	*x = CreateNewsLetterReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewsLetterReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewsLetterReturnFunction) ProtoMessage() {}

func (x *CreateNewsLetterReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewsLetterReturnFunction.ProtoReflect.Descriptor instead.
func (*CreateNewsLetterReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{34}
}

func (x *CreateNewsLetterReturnFunction) GetNewsletterMetadata() *NewsletterMetadata {
	if x != nil {
		return x.NewsletterMetadata
	}
	return nil
}

func (x *CreateNewsLetterReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type GetBlocklistReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocklist *Blocklist `protobuf:"bytes,1,opt,name=Blocklist" json:"Blocklist,omitempty"`
	Error     *string    `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (x *GetBlocklistReturnFunction) Reset() {
	*x = GetBlocklistReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlocklistReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocklistReturnFunction) ProtoMessage() {}

func (x *GetBlocklistReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocklistReturnFunction.ProtoReflect.Descriptor instead.
func (*GetBlocklistReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{35}
}

func (x *GetBlocklistReturnFunction) GetBlocklist() *Blocklist {
	if x != nil {
		return x.Blocklist
	}
	return nil
}

func (x *GetBlocklistReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type GetContactQRLinkReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link  *string `protobuf:"bytes,1,req,name=Link" json:"Link,omitempty"`
	Error *string `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (x *GetContactQRLinkReturnFunction) Reset() {
	*x = GetContactQRLinkReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactQRLinkReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactQRLinkReturnFunction) ProtoMessage() {}

func (x *GetContactQRLinkReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactQRLinkReturnFunction.ProtoReflect.Descriptor instead.
func (*GetContactQRLinkReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{36}
}

func (x *GetContactQRLinkReturnFunction) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

func (x *GetContactQRLinkReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type GetGroupRequestParticipantsReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participants []*JID  `protobuf:"bytes,1,rep,name=Participants" json:"Participants,omitempty"`
	Error        *string `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (x *GetGroupRequestParticipantsReturnFunction) Reset() {
	*x = GetGroupRequestParticipantsReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRequestParticipantsReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequestParticipantsReturnFunction) ProtoMessage() {}

func (x *GetGroupRequestParticipantsReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequestParticipantsReturnFunction.ProtoReflect.Descriptor instead.
func (*GetGroupRequestParticipantsReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{37}
}

func (x *GetGroupRequestParticipantsReturnFunction) GetParticipants() []*JID {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *GetGroupRequestParticipantsReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type GetJoinedGroupsReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group []*GroupInfo `protobuf:"bytes,1,rep,name=Group" json:"Group,omitempty"`
	Error *string      `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (x *GetJoinedGroupsReturnFunction) Reset() {
	*x = GetJoinedGroupsReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJoinedGroupsReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJoinedGroupsReturnFunction) ProtoMessage() {}

func (x *GetJoinedGroupsReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJoinedGroupsReturnFunction.ProtoReflect.Descriptor instead.
func (*GetJoinedGroupsReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{38}
}

func (x *GetJoinedGroupsReturnFunction) GetGroup() []*GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GetJoinedGroupsReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type ReqCreateGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              *string            `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Participants      []*JID             `protobuf:"bytes,2,rep,name=Participants" json:"Participants,omitempty"`
	CreateKey         *string            `protobuf:"bytes,3,req,name=CreateKey" json:"CreateKey,omitempty"`
	GroupParent       *GroupParent       `protobuf:"bytes,4,opt,name=GroupParent" json:"GroupParent,omitempty"`
	GroupLinkedParent *GroupLinkedParent `protobuf:"bytes,5,opt,name=GroupLinkedParent" json:"GroupLinkedParent,omitempty"`
}

func (x *ReqCreateGroup) Reset() {
	*x = ReqCreateGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateGroup) ProtoMessage() {}

func (x *ReqCreateGroup) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateGroup.ProtoReflect.Descriptor instead.
func (*ReqCreateGroup) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{39}
}

func (x *ReqCreateGroup) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ReqCreateGroup) GetParticipants() []*JID {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *ReqCreateGroup) GetCreateKey() string {
	if x != nil && x.CreateKey != nil {
		return *x.CreateKey
	}
	return ""
}

func (x *ReqCreateGroup) GetGroupParent() *GroupParent {
	if x != nil {
		return x.GroupParent
	}
	return nil
}

func (x *ReqCreateGroup) GetGroupLinkedParent() *GroupLinkedParent {
	if x != nil {
		return x.GroupLinkedParent
	}
	return nil
}

type JIDArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JIDS []*JID `protobuf:"bytes,1,rep,name=JIDS" json:"JIDS,omitempty"`
}

func (x *JIDArray) Reset() {
	*x = JIDArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JIDArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JIDArray) ProtoMessage() {}

func (x *JIDArray) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JIDArray.ProtoReflect.Descriptor instead.
func (*JIDArray) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{40}
}

func (x *JIDArray) GetJIDS() []*JID {
	if x != nil {
		return x.JIDS
	}
	return nil
}

type ArrayString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []string `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (x *ArrayString) Reset() {
	*x = ArrayString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayString) ProtoMessage() {}

func (x *ArrayString) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayString.ProtoReflect.Descriptor instead.
func (*ArrayString) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{41}
}

func (x *ArrayString) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type NewsLetterMessageMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EditTS     *int64 `protobuf:"varint,1,req,name=EditTS" json:"EditTS,omitempty"`
	OriginalTS *int64 `protobuf:"varint,2,req,name=OriginalTS" json:"OriginalTS,omitempty"`
}

func (x *NewsLetterMessageMeta) Reset() {
	*x = NewsLetterMessageMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsLetterMessageMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsLetterMessageMeta) ProtoMessage() {}

func (x *NewsLetterMessageMeta) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsLetterMessageMeta.ProtoReflect.Descriptor instead.
func (*NewsLetterMessageMeta) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{42}
}

func (x *NewsLetterMessageMeta) GetEditTS() int64 {
	if x != nil && x.EditTS != nil {
		return *x.EditTS
	}
	return 0
}

func (x *NewsLetterMessageMeta) GetOriginalTS() int64 {
	if x != nil && x.OriginalTS != nil {
		return *x.OriginalTS
	}
	return 0
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info                 *MessageInfo             `protobuf:"bytes,1,req,name=Info" json:"Info,omitempty"`
	Message              *defproto.Message        `protobuf:"bytes,2,opt,name=Message" json:"Message,omitempty"`
	IsEphemeral          *bool                    `protobuf:"varint,3,req,name=IsEphemeral" json:"IsEphemeral,omitempty"`
	IsViewOnce           *bool                    `protobuf:"varint,4,req,name=IsViewOnce" json:"IsViewOnce,omitempty"`
	IsViewOnceV2         *bool                    `protobuf:"varint,5,req,name=IsViewOnceV2" json:"IsViewOnceV2,omitempty"`
	IsEdit               *bool                    `protobuf:"varint,6,req,name=IsEdit" json:"IsEdit,omitempty"`
	SourceWebMsg         *defproto.WebMessageInfo `protobuf:"bytes,7,opt,name=SourceWebMsg" json:"SourceWebMsg,omitempty"`
	UnavailableRequestID *string                  `protobuf:"bytes,8,req,name=UnavailableRequestID" json:"UnavailableRequestID,omitempty"`
	RetryCount           *int64                   `protobuf:"varint,9,req,name=RetryCount" json:"RetryCount,omitempty"`
	NewsLetterMeta       *NewsLetterMessageMeta   `protobuf:"bytes,10,opt,name=NewsLetterMeta" json:"NewsLetterMeta,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{43}
}

func (x *Message) GetInfo() *MessageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Message) GetMessage() *defproto.Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Message) GetIsEphemeral() bool {
	if x != nil && x.IsEphemeral != nil {
		return *x.IsEphemeral
	}
	return false
}

func (x *Message) GetIsViewOnce() bool {
	if x != nil && x.IsViewOnce != nil {
		return *x.IsViewOnce
	}
	return false
}

func (x *Message) GetIsViewOnceV2() bool {
	if x != nil && x.IsViewOnceV2 != nil {
		return *x.IsViewOnceV2
	}
	return false
}

func (x *Message) GetIsEdit() bool {
	if x != nil && x.IsEdit != nil {
		return *x.IsEdit
	}
	return false
}

func (x *Message) GetSourceWebMsg() *defproto.WebMessageInfo {
	if x != nil {
		return x.SourceWebMsg
	}
	return nil
}

func (x *Message) GetUnavailableRequestID() string {
	if x != nil && x.UnavailableRequestID != nil {
		return *x.UnavailableRequestID
	}
	return ""
}

func (x *Message) GetRetryCount() int64 {
	if x != nil && x.RetryCount != nil {
		return *x.RetryCount
	}
	return 0
}

func (x *Message) GetNewsLetterMeta() *NewsLetterMessageMeta {
	if x != nil {
		return x.NewsLetterMeta
	}
	return nil
}

type CreateNewsletterParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *string `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Description *string `protobuf:"bytes,2,req,name=Description" json:"Description,omitempty"`
	Picture     []byte  `protobuf:"bytes,3,req,name=Picture" json:"Picture,omitempty"`
}

func (x *CreateNewsletterParams) Reset() {
	*x = CreateNewsletterParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewsletterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewsletterParams) ProtoMessage() {}

func (x *CreateNewsletterParams) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewsletterParams.ProtoReflect.Descriptor instead.
func (*CreateNewsletterParams) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{44}
}

func (x *CreateNewsletterParams) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateNewsletterParams) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateNewsletterParams) GetPicture() []byte {
	if x != nil {
		return x.Picture
	}
	return nil
}

type WrappedNewsletterState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *WrappedNewsletterState_NewsletterState `protobuf:"varint,1,req,name=Type,enum=neonize.WrappedNewsletterState_NewsletterState" json:"Type,omitempty"`
}

func (x *WrappedNewsletterState) Reset() {
	*x = WrappedNewsletterState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WrappedNewsletterState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WrappedNewsletterState) ProtoMessage() {}

func (x *WrappedNewsletterState) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WrappedNewsletterState.ProtoReflect.Descriptor instead.
func (*WrappedNewsletterState) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{45}
}

func (x *WrappedNewsletterState) GetType() WrappedNewsletterState_NewsletterState {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return WrappedNewsletterState_ACTIVE
}

type NewsletterText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text       *string `protobuf:"bytes,1,req,name=Text" json:"Text,omitempty"`
	ID         *string `protobuf:"bytes,2,req,name=ID" json:"ID,omitempty"`
	UpdateTime *int64  `protobuf:"varint,3,req,name=UpdateTime" json:"UpdateTime,omitempty"`
}

func (x *NewsletterText) Reset() {
	*x = NewsletterText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsletterText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsletterText) ProtoMessage() {}

func (x *NewsletterText) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsletterText.ProtoReflect.Descriptor instead.
func (*NewsletterText) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{46}
}

func (x *NewsletterText) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *NewsletterText) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *NewsletterText) GetUpdateTime() int64 {
	if x != nil && x.UpdateTime != nil {
		return *x.UpdateTime
	}
	return 0
}

type ProfilePictureInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL        *string `protobuf:"bytes,1,req,name=URL" json:"URL,omitempty"`
	ID         *string `protobuf:"bytes,2,req,name=ID" json:"ID,omitempty"`
	Type       *string `protobuf:"bytes,3,req,name=Type" json:"Type,omitempty"`
	DirectPath *string `protobuf:"bytes,4,req,name=DirectPath" json:"DirectPath,omitempty"`
}

func (x *ProfilePictureInfo) Reset() {
	*x = ProfilePictureInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfilePictureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfilePictureInfo) ProtoMessage() {}

func (x *ProfilePictureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfilePictureInfo.ProtoReflect.Descriptor instead.
func (*ProfilePictureInfo) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{47}
}

func (x *ProfilePictureInfo) GetURL() string {
	if x != nil && x.URL != nil {
		return *x.URL
	}
	return ""
}

func (x *ProfilePictureInfo) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *ProfilePictureInfo) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ProfilePictureInfo) GetDirectPath() string {
	if x != nil && x.DirectPath != nil {
		return *x.DirectPath
	}
	return ""
}

type NewsletterReactionSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *NewsletterReactionSettings_NewsletterReactionsMode `protobuf:"varint,1,req,name=Value,enum=neonize.NewsletterReactionSettings_NewsletterReactionsMode" json:"Value,omitempty"`
}

func (x *NewsletterReactionSettings) Reset() {
	*x = NewsletterReactionSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsletterReactionSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsletterReactionSettings) ProtoMessage() {}

func (x *NewsletterReactionSettings) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsletterReactionSettings.ProtoReflect.Descriptor instead.
func (*NewsletterReactionSettings) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{48}
}

func (x *NewsletterReactionSettings) GetValue() NewsletterReactionSettings_NewsletterReactionsMode {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return NewsletterReactionSettings_ALL
}

type NewsletterSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReactionCodes *NewsletterReactionSettings `protobuf:"bytes,1,req,name=ReactionCodes" json:"ReactionCodes,omitempty"`
}

func (x *NewsletterSetting) Reset() {
	*x = NewsletterSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsletterSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsletterSetting) ProtoMessage() {}

func (x *NewsletterSetting) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsletterSetting.ProtoReflect.Descriptor instead.
func (*NewsletterSetting) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{49}
}

func (x *NewsletterSetting) GetReactionCodes() *NewsletterReactionSettings {
	if x != nil {
		return x.ReactionCodes
	}
	return nil
}

type NewsletterThreadMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreationTime      *int64                                                `protobuf:"varint,1,req,name=CreationTime" json:"CreationTime,omitempty"`
	InviteCode        *string                                               `protobuf:"bytes,2,req,name=InviteCode" json:"InviteCode,omitempty"`
	Name              *NewsletterText                                       `protobuf:"bytes,3,req,name=Name" json:"Name,omitempty"`
	Description       *NewsletterText                                       `protobuf:"bytes,4,req,name=Description" json:"Description,omitempty"`
	SubscriberCount   *int64                                                `protobuf:"varint,5,req,name=SubscriberCount" json:"SubscriberCount,omitempty"`
	VerificationState *NewsletterThreadMetadata_NewsletterVerificationState `protobuf:"varint,6,req,name=VerificationState,enum=neonize.NewsletterThreadMetadata_NewsletterVerificationState" json:"VerificationState,omitempty"`
	Picture           *ProfilePictureInfo                                   `protobuf:"bytes,7,opt,name=Picture" json:"Picture,omitempty"`
	Preview           *ProfilePictureInfo                                   `protobuf:"bytes,8,req,name=Preview" json:"Preview,omitempty"`
	Settings          *NewsletterSetting                                    `protobuf:"bytes,9,req,name=Settings" json:"Settings,omitempty"`
}

func (x *NewsletterThreadMetadata) Reset() {
	*x = NewsletterThreadMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsletterThreadMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsletterThreadMetadata) ProtoMessage() {}

func (x *NewsletterThreadMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsletterThreadMetadata.ProtoReflect.Descriptor instead.
func (*NewsletterThreadMetadata) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{50}
}

func (x *NewsletterThreadMetadata) GetCreationTime() int64 {
	if x != nil && x.CreationTime != nil {
		return *x.CreationTime
	}
	return 0
}

func (x *NewsletterThreadMetadata) GetInviteCode() string {
	if x != nil && x.InviteCode != nil {
		return *x.InviteCode
	}
	return ""
}

func (x *NewsletterThreadMetadata) GetName() *NewsletterText {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *NewsletterThreadMetadata) GetDescription() *NewsletterText {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *NewsletterThreadMetadata) GetSubscriberCount() int64 {
	if x != nil && x.SubscriberCount != nil {
		return *x.SubscriberCount
	}
	return 0
}

func (x *NewsletterThreadMetadata) GetVerificationState() NewsletterThreadMetadata_NewsletterVerificationState {
	if x != nil && x.VerificationState != nil {
		return *x.VerificationState
	}
	return NewsletterThreadMetadata_VERIFIED
}

func (x *NewsletterThreadMetadata) GetPicture() *ProfilePictureInfo {
	if x != nil {
		return x.Picture
	}
	return nil
}

func (x *NewsletterThreadMetadata) GetPreview() *ProfilePictureInfo {
	if x != nil {
		return x.Preview
	}
	return nil
}

func (x *NewsletterThreadMetadata) GetSettings() *NewsletterSetting {
	if x != nil {
		return x.Settings
	}
	return nil
}

type NewsletterViewerMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mute *NewsletterViewerMetadata_NewsletterMuteState `protobuf:"varint,1,req,name=Mute,enum=neonize.NewsletterViewerMetadata_NewsletterMuteState" json:"Mute,omitempty"`
	Role *NewsletterViewerMetadata_NewsletterRole      `protobuf:"varint,2,req,name=Role,enum=neonize.NewsletterViewerMetadata_NewsletterRole" json:"Role,omitempty"`
}

func (x *NewsletterViewerMetadata) Reset() {
	*x = NewsletterViewerMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsletterViewerMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsletterViewerMetadata) ProtoMessage() {}

func (x *NewsletterViewerMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsletterViewerMetadata.ProtoReflect.Descriptor instead.
func (*NewsletterViewerMetadata) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{51}
}

func (x *NewsletterViewerMetadata) GetMute() NewsletterViewerMetadata_NewsletterMuteState {
	if x != nil && x.Mute != nil {
		return *x.Mute
	}
	return NewsletterViewerMetadata_ON
}

func (x *NewsletterViewerMetadata) GetRole() NewsletterViewerMetadata_NewsletterRole {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return NewsletterViewerMetadata_SUBSCRIBER
}

type NewsletterMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *JID                      `protobuf:"bytes,1,req,name=ID" json:"ID,omitempty"`
	State      *WrappedNewsletterState   `protobuf:"bytes,2,req,name=State" json:"State,omitempty"`
	ThreadMeta *NewsletterThreadMetadata `protobuf:"bytes,3,req,name=ThreadMeta" json:"ThreadMeta,omitempty"`
	ViewerMeta *NewsletterViewerMetadata `protobuf:"bytes,4,opt,name=ViewerMeta" json:"ViewerMeta,omitempty"`
}

func (x *NewsletterMetadata) Reset() {
	*x = NewsletterMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsletterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsletterMetadata) ProtoMessage() {}

func (x *NewsletterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsletterMetadata.ProtoReflect.Descriptor instead.
func (*NewsletterMetadata) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{52}
}

func (x *NewsletterMetadata) GetID() *JID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *NewsletterMetadata) GetState() *WrappedNewsletterState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *NewsletterMetadata) GetThreadMeta() *NewsletterThreadMetadata {
	if x != nil {
		return x.ThreadMeta
	}
	return nil
}

func (x *NewsletterMetadata) GetViewerMeta() *NewsletterViewerMetadata {
	if x != nil {
		return x.ViewerMeta
	}
	return nil
}

type Blocklist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DHash *string `protobuf:"bytes,1,req,name=DHash" json:"DHash,omitempty"`
	JIDs  []*JID  `protobuf:"bytes,2,rep,name=JIDs" json:"JIDs,omitempty"`
}

func (x *Blocklist) Reset() {
	*x = Blocklist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blocklist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blocklist) ProtoMessage() {}

func (x *Blocklist) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blocklist.ProtoReflect.Descriptor instead.
func (*Blocklist) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{53}
}

func (x *Blocklist) GetDHash() string {
	if x != nil && x.DHash != nil {
		return *x.DHash
	}
	return ""
}

func (x *Blocklist) GetJIDs() []*JID {
	if x != nil {
		return x.JIDs
	}
	return nil
}

type Reaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *string `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	Count *int64  `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
}

func (x *Reaction) Reset() {
	*x = Reaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reaction) ProtoMessage() {}

func (x *Reaction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reaction.ProtoReflect.Descriptor instead.
func (*Reaction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{54}
}

func (x *Reaction) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *Reaction) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type NewsletterMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageServerID *int64            `protobuf:"varint,1,req,name=MessageServerID" json:"MessageServerID,omitempty"`
	ViewsCount      *int64            `protobuf:"varint,2,req,name=ViewsCount" json:"ViewsCount,omitempty"`
	ReactionCounts  []*Reaction       `protobuf:"bytes,3,rep,name=ReactionCounts" json:"ReactionCounts,omitempty"`
	Message         *defproto.Message `protobuf:"bytes,4,req,name=Message" json:"Message,omitempty"`
}

func (x *NewsletterMessage) Reset() {
	*x = NewsletterMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsletterMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsletterMessage) ProtoMessage() {}

func (x *NewsletterMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsletterMessage.ProtoReflect.Descriptor instead.
func (*NewsletterMessage) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{55}
}

func (x *NewsletterMessage) GetMessageServerID() int64 {
	if x != nil && x.MessageServerID != nil {
		return *x.MessageServerID
	}
	return 0
}

func (x *NewsletterMessage) GetViewsCount() int64 {
	if x != nil && x.ViewsCount != nil {
		return *x.ViewsCount
	}
	return 0
}

func (x *NewsletterMessage) GetReactionCounts() []*Reaction {
	if x != nil {
		return x.ReactionCounts
	}
	return nil
}

func (x *NewsletterMessage) GetMessage() *defproto.Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type GetNewsletterMessageUpdateReturnFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewsletterMessage []*NewsletterMessage `protobuf:"bytes,1,rep,name=NewsletterMessage" json:"NewsletterMessage,omitempty"`
	Error             *string              `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (x *GetNewsletterMessageUpdateReturnFunction) Reset() {
	*x = GetNewsletterMessageUpdateReturnFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewsletterMessageUpdateReturnFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsletterMessageUpdateReturnFunction) ProtoMessage() {}

func (x *GetNewsletterMessageUpdateReturnFunction) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsletterMessageUpdateReturnFunction.ProtoReflect.Descriptor instead.
func (*GetNewsletterMessageUpdateReturnFunction) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{56}
}

func (x *GetNewsletterMessageUpdateReturnFunction) GetNewsletterMessage() []*NewsletterMessage {
	if x != nil {
		return x.NewsletterMessage
	}
	return nil
}

func (x *GetNewsletterMessageUpdateReturnFunction) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type PrivacySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupAdd     *PrivacySettings_PrivacySetting `protobuf:"varint,1,req,name=GroupAdd,enum=neonize.PrivacySettings_PrivacySetting" json:"GroupAdd,omitempty"`
	LastSeen     *PrivacySettings_PrivacySetting `protobuf:"varint,2,req,name=LastSeen,enum=neonize.PrivacySettings_PrivacySetting" json:"LastSeen,omitempty"`
	Status       *PrivacySettings_PrivacySetting `protobuf:"varint,3,req,name=Status,enum=neonize.PrivacySettings_PrivacySetting" json:"Status,omitempty"`
	Profile      *PrivacySettings_PrivacySetting `protobuf:"varint,4,req,name=Profile,enum=neonize.PrivacySettings_PrivacySetting" json:"Profile,omitempty"`
	ReadReceipts *PrivacySettings_PrivacySetting `protobuf:"varint,5,req,name=ReadReceipts,enum=neonize.PrivacySettings_PrivacySetting" json:"ReadReceipts,omitempty"`
	CallAdd      *PrivacySettings_PrivacySetting `protobuf:"varint,6,req,name=CallAdd,enum=neonize.PrivacySettings_PrivacySetting" json:"CallAdd,omitempty"`
	Online       *PrivacySettings_PrivacySetting `protobuf:"varint,7,req,name=Online,enum=neonize.PrivacySettings_PrivacySetting" json:"Online,omitempty"`
}

func (x *PrivacySettings) Reset() {
	*x = PrivacySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Neonize_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivacySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivacySettings) ProtoMessage() {}

func (x *PrivacySettings) ProtoReflect() protoreflect.Message {
	mi := &file_Neonize_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivacySettings.ProtoReflect.Descriptor instead.
func (*PrivacySettings) Descriptor() ([]byte, []int) {
	return file_Neonize_proto_rawDescGZIP(), []int{57}
}

func (x *PrivacySettings) GetGroupAdd() PrivacySettings_PrivacySetting {
	if x != nil && x.GroupAdd != nil {
		return *x.GroupAdd
	}
	return PrivacySettings_UNDEFINED
}

func (x *PrivacySettings) GetLastSeen() PrivacySettings_PrivacySetting {
	if x != nil && x.LastSeen != nil {
		return *x.LastSeen
	}
	return PrivacySettings_UNDEFINED
}

func (x *PrivacySettings) GetStatus() PrivacySettings_PrivacySetting {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return PrivacySettings_UNDEFINED
}

func (x *PrivacySettings) GetProfile() PrivacySettings_PrivacySetting {
	if x != nil && x.Profile != nil {
		return *x.Profile
	}
	return PrivacySettings_UNDEFINED
}

func (x *PrivacySettings) GetReadReceipts() PrivacySettings_PrivacySetting {
	if x != nil && x.ReadReceipts != nil {
		return *x.ReadReceipts
	}
	return PrivacySettings_UNDEFINED
}

func (x *PrivacySettings) GetCallAdd() PrivacySettings_PrivacySetting {
	if x != nil && x.CallAdd != nil {
		return *x.CallAdd
	}
	return PrivacySettings_UNDEFINED
}

func (x *PrivacySettings) GetOnline() PrivacySettings_PrivacySetting {
	if x != nil && x.Online != nil {
		return *x.Online
	}
	return PrivacySettings_UNDEFINED
}

var File_Neonize_proto protoreflect.FileDescriptor

var file_Neonize_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x4e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x1a, 0x09, 0x64, 0x65, 0x66, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x9f, 0x01, 0x0a, 0x03, 0x4a, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x61, 0x77, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x08, 0x52, 0x61, 0x77, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x49,
	0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x06, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xad, 0x03, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e,
	0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x75, 0x73, 0x68, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x50, 0x75, 0x73, 0x68, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x18, 0x08, 0x20, 0x02, 0x28, 0x08, 0x52, 0x09, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x45, 0x64, 0x69, 0x74, 0x18, 0x0a, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x04, 0x45, 0x64, 0x69, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e,
	0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x22, 0xdc, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x0c, 0x52, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x24,
	0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x53, 0x48,
	0x41, 0x32, 0x35, 0x36, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x48, 0x41, 0x32,
	0x35, 0x36, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x48,
	0x41, 0x32, 0x35, 0x36, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x22, 0xcb, 0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4a,
	0x49, 0x44, 0x52, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69,
	0x7a, 0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x49, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x08, 0x49, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x3c, 0x0a, 0x12, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x12,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x22, 0x4e, 0x0a, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4a, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0e, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x50, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x61,
	0x73, 0x68, 0x22, 0x98, 0x01, 0x0a, 0x0c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x65, 0x66, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x65, 0x66, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x9b, 0x01,
	0x0a, 0x14, 0x49, 0x73, 0x4f, 0x6e, 0x57, 0x68, 0x61, 0x74, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x03,
	0x4a, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x6f, 0x6e,
	0x69, 0x7a, 0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x03, 0x4a, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x73, 0x49, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x04, 0x49, 0x73, 0x49, 0x6e,
	0x12, 0x39, 0x0a, 0x0c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x0c, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09,
	0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x07, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x6f,
	0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x07, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x22, 0xa8, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x03,
	0x4a, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x6f, 0x6e,
	0x69, 0x7a, 0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x03, 0x4a, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x75, 0x73, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x0d, 0x42, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x08, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x08, 0x52,
	0x0b, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x22, 0x69, 0x0a, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x41, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x4e,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x42, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x09, 0x4e, 0x61,
	0x6d, 0x65, 0x53, 0x65, 0x74, 0x42, 0x79, 0x22, 0xae, 0x01, 0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53,
	0x65, 0x74, 0x41, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x53, 0x65, 0x74, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53,
	0x65, 0x74, 0x42, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x6f,
	0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x0a, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53,
	0x65, 0x74, 0x42, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0c, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x29, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x22, 0x5d, 0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x11, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x22, 0x60, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x70, 0x68, 0x65, 0x6d,
	0x65, 0x72, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65,
	0x72, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x45, 0x70, 0x68,
	0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x61, 0x70, 0x70,
	0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x11, 0x44, 0x69, 0x73, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x22, 0x32, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x63,
	0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x49, 0x6e, 0x63, 0x6f,
	0x67, 0x6e, 0x69, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x49,
	0x6e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x1d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x1d, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x4b, 0x0a, 0x11, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x36,
	0x0a, 0x0f, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4a, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a,
	0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x0f, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x4a, 0x49, 0x44, 0x22, 0x41, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x75, 0x62, 0x12, 0x2c, 0x0a, 0x11, 0x49,
	0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x75, 0x62, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x53, 0x75, 0x62, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x50, 0x0a, 0x1a, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x02, 0x52,
	0x0a, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8d, 0x02, 0x0a, 0x10,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x03, 0x4a, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x03, 0x4a, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x03, 0x4c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x03, 0x4c, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x08, 0x52, 0x07, 0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x0c, 0x49, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x65, 0x6f,
	0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0a, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xca, 0x06, 0x0a, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x08, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x4a, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x65,
	0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x08, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x4a, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x03, 0x4a, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x03,
	0x4a, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x6f, 0x6e,
	0x69, 0x7a, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x0a,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x36, 0x0a, 0x0b, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x6f, 0x6e,
	0x69, 0x7a, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x52, 0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72,
	0x61, 0x6c, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69,
	0x7a, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61,
	0x6c, 0x52, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61,
	0x6c, 0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x63, 0x6f, 0x67, 0x6e,
	0x69, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x65, 0x6f, 0x6e,
	0x69, 0x7a, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x63, 0x6f, 0x67, 0x6e, 0x69,
	0x74, 0x6f, 0x52, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x63, 0x6f, 0x67, 0x6e, 0x69,
	0x74, 0x6f, 0x12, 0x36, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a,
	0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x0a, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x52, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x73, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x75, 0x62, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x75, 0x62, 0x52, 0x11, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x75, 0x62, 0x12, 0x22,
	0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0c,
	0x20, 0x02, 0x28, 0x02, 0x52, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x14, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x3d, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e,
	0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x31, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64,
	0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0x01, 0x22, 0x93, 0x02, 0x0a, 0x13, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x62, 0x75, 0x67, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x05, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x72, 0x73, 0x68, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c,
	0x12, 0x28, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x06, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x0b, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x02, 0x28, 0x03, 0x52, 0x04,
	0x53, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x65, 0x73, 0x70, 0x18, 0x08, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x04, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x74, 0x72,
	0x79, 0x18, 0x09, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x52, 0x65, 0x74, 0x72, 0x79, 0x22, 0x9a,
	0x01, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x0c, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x62, 0x75, 0x67, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0c, 0x44,
	0x65, 0x62, 0x75, 0x67, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x6c, 0x0a, 0x19, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x39,
	0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x53, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x64, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x6f,
	0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x57, 0x0a, 0x1f, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x69, 0x74, 0x68,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x03, 0x4a, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e,
	0x4a, 0x49, 0x44, 0x52, 0x03, 0x4a, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x46, 0x0a, 0x16, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6d, 0x0a, 0x14, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x65, 0x6f,
	0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x51, 0x0a, 0x1b, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x50, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x85, 0x01, 0x0a,
	0x1a, 0x49, 0x73, 0x4f, 0x6e, 0x57, 0x68, 0x61, 0x74, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x14, 0x49,
	0x73, 0x4f, 0x6e, 0x57, 0x68, 0x61, 0x74, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x65, 0x6f, 0x6e,
	0x69, 0x7a, 0x65, 0x2e, 0x49, 0x73, 0x4f, 0x6e, 0x57, 0x68, 0x61, 0x74, 0x73, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x14, 0x49, 0x73, 0x4f, 0x6e, 0x57, 0x68,
	0x61, 0x74, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x70, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x03, 0x4a, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4a,
	0x49, 0x44, 0x52, 0x03, 0x4a, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x65, 0x6f, 0x6e,
	0x69, 0x7a, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x79, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x62, 0x0a, 0x1b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x6f, 0x6c, 0x6c, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2d, 0x0a, 0x08, 0x50, 0x6f, 0x6c, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x66, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x50, 0x6f, 0x6c, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x65, 0x77, 0x73, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x73,
	0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4e,
	0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x12, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x64, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x09, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e,
	0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x4a, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x51,
	0x52, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x73, 0x0a,
	0x29, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0c, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x0c,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x5f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0xf6, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x0c, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x0c,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x08,
	0x4a, 0x49, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x4a, 0x49, 0x44, 0x53,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65,
	0x2e, 0x4a, 0x49, 0x44, 0x52, 0x04, 0x4a, 0x49, 0x44, 0x53, 0x22, 0x21, 0x0a, 0x0b, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4f, 0x0a,
	0x15, 0x4e, 0x65, 0x77, 0x73, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x64, 0x69, 0x74, 0x54, 0x53,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x45, 0x64, 0x69, 0x74, 0x54, 0x53, 0x12, 0x1e,
	0x0a, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x53, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x53, 0x22, 0xb8,
	0x03, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69,
	0x7a, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x66, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65,
	0x72, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x6e, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x56, 0x69, 0x65, 0x77, 0x4f,
	0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x6e, 0x63,
	0x65, 0x56, 0x32, 0x18, 0x05, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x56, 0x69, 0x65,
	0x77, 0x4f, 0x6e, 0x63, 0x65, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x45, 0x64, 0x69,
	0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x45, 0x64, 0x69, 0x74, 0x12,
	0x3c, 0x0a, 0x0c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x65, 0x62, 0x4d, 0x73, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x66, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x57, 0x65, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x65, 0x62, 0x4d, 0x73, 0x67, 0x12, 0x32, 0x0a,
	0x14, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x08, 0x20, 0x02, 0x28, 0x09, 0x52, 0x14, 0x55, 0x6e, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x46, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x73, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x65, 0x6f, 0x6e,
	0x69, 0x7a, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0e, 0x4e, 0x65, 0x77, 0x73, 0x4c,
	0x65, 0x74, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x68, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x07, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x16, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x4e,
	0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x43,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6e,
	0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x4e, 0x65,
	0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4e, 0x65,
	0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x3e, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x45, 0x4f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45,
	0x44, 0x10, 0x03, 0x22, 0x54, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x12, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52,
	0x4c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0xb7, 0x01, 0x0a, 0x1a, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65,
	0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x51, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4e, 0x65,
	0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x46, 0x0a, 0x17, 0x4e, 0x65, 0x77, 0x73, 0x6c,
	0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x42,
	0x41, 0x53, 0x49, 0x43, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x03,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x04, 0x22,
	0x5e, 0x0a, 0x11, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x49, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x65,
	0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x0d, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22,
	0xc0, 0x04, 0x0a, 0x18, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4e, 0x65, 0x77,
	0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x0f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x6b, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x3d, 0x2e,
	0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x11, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x35, 0x0a, 0x07, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x08, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x36, 0x0a,
	0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x09, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65,
	0x74, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x3b, 0x0a, 0x1b, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x02, 0x22, 0x96, 0x02, 0x0a, 0x18, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65,
	0x72, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x49, 0x0a, 0x04, 0x4d, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x35, 0x2e,
	0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4d, 0x75, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x04, 0x4d, 0x75, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x52, 0x6f,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69,
	0x7a, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x56, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x65, 0x77, 0x73,
	0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65,
	0x22, 0x26, 0x0a, 0x13, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4d, 0x75,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4e, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x4f, 0x46, 0x46, 0x10, 0x02, 0x22, 0x41, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x73,
	0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55,
	0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x55,
	0x45, 0x53, 0x54, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x03,
	0x12, 0x09, 0x0a, 0x05, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x04, 0x22, 0xef, 0x01, 0x0a, 0x12,
	0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x35, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x64, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x65,
	0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0a,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0a, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x0a, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x43, 0x0a,
	0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x44, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x20, 0x0a, 0x04, 0x4a, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x4a, 0x49, 0x44, 0x52, 0x04, 0x4a, 0x49,
	0x44, 0x73, 0x22, 0x34, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x11, 0x4e, 0x65, 0x77,
	0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x56, 0x69, 0x65, 0x77,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x56, 0x69,
	0x65, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x66, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x8a, 0x01, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a,
	0x11, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69,
	0x7a, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x11, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xe9, 0x04,
	0x0a, 0x0f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x43, 0x0a, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x12, 0x43, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69,
	0x7a, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x3f, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6e, 0x65,
	0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x27, 0x2e,
	0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x4b, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0c,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x07,
	0x43, 0x61, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x27, 0x2e,
	0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x12,
	0x3f, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0e, 0x32,
	0x27, 0x2e, 0x6e, 0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x22, 0x77, 0x0a, 0x0e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x4e, 0x54, 0x41, 0x43, 0x54, 0x53, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4e, 0x54,
	0x41, 0x43, 0x54, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x04, 0x12,
	0x13, 0x0a, 0x0f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x53, 0x45,
	0x45, 0x4e, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x06, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x07, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x6e,
	0x65, 0x6f, 0x6e, 0x69, 0x7a, 0x65,
}

var (
	file_Neonize_proto_rawDescOnce sync.Once
	file_Neonize_proto_rawDescData = file_Neonize_proto_rawDesc
)

func file_Neonize_proto_rawDescGZIP() []byte {
	file_Neonize_proto_rawDescOnce.Do(func() {
		file_Neonize_proto_rawDescData = protoimpl.X.CompressGZIP(file_Neonize_proto_rawDescData)
	})
	return file_Neonize_proto_rawDescData
}

var file_Neonize_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_Neonize_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_Neonize_proto_goTypes = []interface{}{
	(GroupInfo_GroupMemberAddMode)(0),                         // 0: neonize.GroupInfo.GroupMemberAddMode
	(WrappedNewsletterState_NewsletterState)(0),               // 1: neonize.WrappedNewsletterState.NewsletterState
	(NewsletterReactionSettings_NewsletterReactionsMode)(0),   // 2: neonize.NewsletterReactionSettings.NewsletterReactionsMode
	(NewsletterThreadMetadata_NewsletterVerificationState)(0), // 3: neonize.NewsletterThreadMetadata.NewsletterVerificationState
	(NewsletterViewerMetadata_NewsletterMuteState)(0),         // 4: neonize.NewsletterViewerMetadata.NewsletterMuteState
	(NewsletterViewerMetadata_NewsletterRole)(0),              // 5: neonize.NewsletterViewerMetadata.NewsletterRole
	(PrivacySettings_PrivacySetting)(0),                       // 6: neonize.PrivacySettings.PrivacySetting
	(*JID)(nil),                                               // 7: neonize.JID
	(*MessageInfo)(nil),                                       // 8: neonize.MessageInfo
	(*UploadResponse)(nil),                                    // 9: neonize.UploadResponse
	(*MessageSource)(nil),                                     // 10: neonize.MessageSource
	(*DeviceSentMeta)(nil),                                    // 11: neonize.DeviceSentMeta
	(*VerifiedName)(nil),                                      // 12: neonize.VerifiedName
	(*IsOnWhatsAppResponse)(nil),                              // 13: neonize.IsOnWhatsAppResponse
	(*UserInfo)(nil),                                          // 14: neonize.UserInfo
	(*Device)(nil),                                            // 15: neonize.Device
	(*GroupName)(nil),                                         // 16: neonize.GroupName
	(*GroupTopic)(nil),                                        // 17: neonize.GroupTopic
	(*GroupLocked)(nil),                                       // 18: neonize.GroupLocked
	(*GroupAnnounce)(nil),                                     // 19: neonize.GroupAnnounce
	(*GroupEphemeral)(nil),                                    // 20: neonize.GroupEphemeral
	(*GroupIncognito)(nil),                                    // 21: neonize.GroupIncognito
	(*GroupParent)(nil),                                       // 22: neonize.GroupParent
	(*GroupLinkedParent)(nil),                                 // 23: neonize.GroupLinkedParent
	(*GroupIsDefaultSub)(nil),                                 // 24: neonize.GroupIsDefaultSub
	(*GroupParticipantAddRequest)(nil),                        // 25: neonize.GroupParticipantAddRequest
	(*GroupParticipant)(nil),                                  // 26: neonize.GroupParticipant
	(*GroupInfo)(nil),                                         // 27: neonize.GroupInfo
	(*MessageDebugTimings)(nil),                               // 28: neonize.MessageDebugTimings
	(*SendResponse)(nil),                                      // 29: neonize.SendResponse
	(*SendMessageReturnFunction)(nil),                         // 30: neonize.SendMessageReturnFunction
	(*GetGroupInfoReturnFunction)(nil),                        // 31: neonize.GetGroupInfoReturnFunction
	(*JoinGroupWithLinkReturnFunction)(nil),                   // 32: neonize.JoinGroupWithLinkReturnFunction
	(*GetGroupInviteLinkReturnFunction)(nil),                  // 33: neonize.GetGroupInviteLinkReturnFunction
	(*DownloadReturnFunction)(nil),                            // 34: neonize.DownloadReturnFunction
	(*UploadReturnFunction)(nil),                              // 35: neonize.UploadReturnFunction
	(*SetGroupPhotoReturnFunction)(nil),                       // 36: neonize.SetGroupPhotoReturnFunction
	(*IsOnWhatsAppReturnFunction)(nil),                        // 37: neonize.IsOnWhatsAppReturnFunction
	(*GetUserInfoSingleReturnFunction)(nil),                   // 38: neonize.GetUserInfoSingleReturnFunction
	(*GetUserInfoReturnFunction)(nil),                         // 39: neonize.GetUserInfoReturnFunction
	(*BuildPollVoteReturnFunction)(nil),                       // 40: neonize.BuildPollVoteReturnFunction
	(*CreateNewsLetterReturnFunction)(nil),                    // 41: neonize.CreateNewsLetterReturnFunction
	(*GetBlocklistReturnFunction)(nil),                        // 42: neonize.GetBlocklistReturnFunction
	(*GetContactQRLinkReturnFunction)(nil),                    // 43: neonize.GetContactQRLinkReturnFunction
	(*GetGroupRequestParticipantsReturnFunction)(nil),         // 44: neonize.GetGroupRequestParticipantsReturnFunction
	(*GetJoinedGroupsReturnFunction)(nil),                     // 45: neonize.GetJoinedGroupsReturnFunction
	(*ReqCreateGroup)(nil),                                    // 46: neonize.ReqCreateGroup
	(*JIDArray)(nil),                                          // 47: neonize.JIDArray
	(*ArrayString)(nil),                                       // 48: neonize.ArrayString
	(*NewsLetterMessageMeta)(nil),                             // 49: neonize.NewsLetterMessageMeta
	(*Message)(nil),                                           // 50: neonize.Message
	(*CreateNewsletterParams)(nil),                            // 51: neonize.CreateNewsletterParams
	(*WrappedNewsletterState)(nil),                            // 52: neonize.WrappedNewsletterState
	(*NewsletterText)(nil),                                    // 53: neonize.NewsletterText
	(*ProfilePictureInfo)(nil),                                // 54: neonize.ProfilePictureInfo
	(*NewsletterReactionSettings)(nil),                        // 55: neonize.NewsletterReactionSettings
	(*NewsletterSetting)(nil),                                 // 56: neonize.NewsletterSetting
	(*NewsletterThreadMetadata)(nil),                          // 57: neonize.NewsletterThreadMetadata
	(*NewsletterViewerMetadata)(nil),                          // 58: neonize.NewsletterViewerMetadata
	(*NewsletterMetadata)(nil),                                // 59: neonize.NewsletterMetadata
	(*Blocklist)(nil),                                         // 60: neonize.Blocklist
	(*Reaction)(nil),                                          // 61: neonize.Reaction
	(*NewsletterMessage)(nil),                                 // 62: neonize.NewsletterMessage
	(*GetNewsletterMessageUpdateReturnFunction)(nil),          // 63: neonize.GetNewsletterMessageUpdateReturnFunction
	(*PrivacySettings)(nil),                                   // 64: neonize.PrivacySettings
	(*defproto.VerifiedNameCertificate)(nil),                  // 65: defproto.VerifiedNameCertificate
	(*defproto.VerifiedNameCertificate_Details)(nil),          // 66: defproto.VerifiedNameCertificate.Details
	(*defproto.Message)(nil),                                  // 67: defproto.Message
	(*defproto.WebMessageInfo)(nil),                           // 68: defproto.WebMessageInfo
}
var file_Neonize_proto_depIdxs = []int32{
	10, // 0: neonize.MessageInfo.MessageSource:type_name -> neonize.MessageSource
	12, // 1: neonize.MessageInfo.VerifiedName:type_name -> neonize.VerifiedName
	11, // 2: neonize.MessageInfo.DeviceSentMeta:type_name -> neonize.DeviceSentMeta
	7,  // 3: neonize.MessageSource.Chat:type_name -> neonize.JID
	7,  // 4: neonize.MessageSource.Sender:type_name -> neonize.JID
	7,  // 5: neonize.MessageSource.BroadcastListOwner:type_name -> neonize.JID
	65, // 6: neonize.VerifiedName.Certificate:type_name -> defproto.VerifiedNameCertificate
	66, // 7: neonize.VerifiedName.Details:type_name -> defproto.VerifiedNameCertificate.Details
	7,  // 8: neonize.IsOnWhatsAppResponse.JID:type_name -> neonize.JID
	12, // 9: neonize.IsOnWhatsAppResponse.VerifiedName:type_name -> neonize.VerifiedName
	12, // 10: neonize.UserInfo.VerifiedName:type_name -> neonize.VerifiedName
	7,  // 11: neonize.UserInfo.Devices:type_name -> neonize.JID
	7,  // 12: neonize.Device.JID:type_name -> neonize.JID
	7,  // 13: neonize.GroupName.NameSetBy:type_name -> neonize.JID
	7,  // 14: neonize.GroupTopic.TopicSetBy:type_name -> neonize.JID
	7,  // 15: neonize.GroupLinkedParent.LinkedParentJID:type_name -> neonize.JID
	7,  // 16: neonize.GroupParticipant.JID:type_name -> neonize.JID
	7,  // 17: neonize.GroupParticipant.LID:type_name -> neonize.JID
	25, // 18: neonize.GroupParticipant.AddRequest:type_name -> neonize.GroupParticipantAddRequest
	7,  // 19: neonize.GroupInfo.OwnerJID:type_name -> neonize.JID
	7,  // 20: neonize.GroupInfo.JID:type_name -> neonize.JID
	16, // 21: neonize.GroupInfo.GroupName:type_name -> neonize.GroupName
	17, // 22: neonize.GroupInfo.GroupTopic:type_name -> neonize.GroupTopic
	18, // 23: neonize.GroupInfo.GroupLocked:type_name -> neonize.GroupLocked
	19, // 24: neonize.GroupInfo.GroupAnnounce:type_name -> neonize.GroupAnnounce
	20, // 25: neonize.GroupInfo.GroupEphemeral:type_name -> neonize.GroupEphemeral
	21, // 26: neonize.GroupInfo.GroupIncognito:type_name -> neonize.GroupIncognito
	22, // 27: neonize.GroupInfo.GroupParent:type_name -> neonize.GroupParent
	23, // 28: neonize.GroupInfo.GroupLinkedParent:type_name -> neonize.GroupLinkedParent
	24, // 29: neonize.GroupInfo.GroupIsDefaultSub:type_name -> neonize.GroupIsDefaultSub
	26, // 30: neonize.GroupInfo.Participants:type_name -> neonize.GroupParticipant
	28, // 31: neonize.SendResponse.DebugTimings:type_name -> neonize.MessageDebugTimings
	29, // 32: neonize.SendMessageReturnFunction.SendResponse:type_name -> neonize.SendResponse
	27, // 33: neonize.GetGroupInfoReturnFunction.GroupInfo:type_name -> neonize.GroupInfo
	7,  // 34: neonize.JoinGroupWithLinkReturnFunction.Jid:type_name -> neonize.JID
	9,  // 35: neonize.UploadReturnFunction.UploadResponse:type_name -> neonize.UploadResponse
	13, // 36: neonize.IsOnWhatsAppReturnFunction.IsOnWhatsAppResponse:type_name -> neonize.IsOnWhatsAppResponse
	7,  // 37: neonize.GetUserInfoSingleReturnFunction.JID:type_name -> neonize.JID
	14, // 38: neonize.GetUserInfoSingleReturnFunction.UserInfo:type_name -> neonize.UserInfo
	38, // 39: neonize.GetUserInfoReturnFunction.UsersInfo:type_name -> neonize.GetUserInfoSingleReturnFunction
	67, // 40: neonize.BuildPollVoteReturnFunction.PollVote:type_name -> defproto.Message
	59, // 41: neonize.CreateNewsLetterReturnFunction.NewsletterMetadata:type_name -> neonize.NewsletterMetadata
	60, // 42: neonize.GetBlocklistReturnFunction.Blocklist:type_name -> neonize.Blocklist
	7,  // 43: neonize.GetGroupRequestParticipantsReturnFunction.Participants:type_name -> neonize.JID
	27, // 44: neonize.GetJoinedGroupsReturnFunction.Group:type_name -> neonize.GroupInfo
	7,  // 45: neonize.ReqCreateGroup.Participants:type_name -> neonize.JID
	22, // 46: neonize.ReqCreateGroup.GroupParent:type_name -> neonize.GroupParent
	23, // 47: neonize.ReqCreateGroup.GroupLinkedParent:type_name -> neonize.GroupLinkedParent
	7,  // 48: neonize.JIDArray.JIDS:type_name -> neonize.JID
	8,  // 49: neonize.Message.Info:type_name -> neonize.MessageInfo
	67, // 50: neonize.Message.Message:type_name -> defproto.Message
	68, // 51: neonize.Message.SourceWebMsg:type_name -> defproto.WebMessageInfo
	49, // 52: neonize.Message.NewsLetterMeta:type_name -> neonize.NewsLetterMessageMeta
	1,  // 53: neonize.WrappedNewsletterState.Type:type_name -> neonize.WrappedNewsletterState.NewsletterState
	2,  // 54: neonize.NewsletterReactionSettings.Value:type_name -> neonize.NewsletterReactionSettings.NewsletterReactionsMode
	55, // 55: neonize.NewsletterSetting.ReactionCodes:type_name -> neonize.NewsletterReactionSettings
	53, // 56: neonize.NewsletterThreadMetadata.Name:type_name -> neonize.NewsletterText
	53, // 57: neonize.NewsletterThreadMetadata.Description:type_name -> neonize.NewsletterText
	3,  // 58: neonize.NewsletterThreadMetadata.VerificationState:type_name -> neonize.NewsletterThreadMetadata.NewsletterVerificationState
	54, // 59: neonize.NewsletterThreadMetadata.Picture:type_name -> neonize.ProfilePictureInfo
	54, // 60: neonize.NewsletterThreadMetadata.Preview:type_name -> neonize.ProfilePictureInfo
	56, // 61: neonize.NewsletterThreadMetadata.Settings:type_name -> neonize.NewsletterSetting
	4,  // 62: neonize.NewsletterViewerMetadata.Mute:type_name -> neonize.NewsletterViewerMetadata.NewsletterMuteState
	5,  // 63: neonize.NewsletterViewerMetadata.Role:type_name -> neonize.NewsletterViewerMetadata.NewsletterRole
	7,  // 64: neonize.NewsletterMetadata.ID:type_name -> neonize.JID
	52, // 65: neonize.NewsletterMetadata.State:type_name -> neonize.WrappedNewsletterState
	57, // 66: neonize.NewsletterMetadata.ThreadMeta:type_name -> neonize.NewsletterThreadMetadata
	58, // 67: neonize.NewsletterMetadata.ViewerMeta:type_name -> neonize.NewsletterViewerMetadata
	7,  // 68: neonize.Blocklist.JIDs:type_name -> neonize.JID
	61, // 69: neonize.NewsletterMessage.ReactionCounts:type_name -> neonize.Reaction
	67, // 70: neonize.NewsletterMessage.Message:type_name -> defproto.Message
	62, // 71: neonize.GetNewsletterMessageUpdateReturnFunction.NewsletterMessage:type_name -> neonize.NewsletterMessage
	6,  // 72: neonize.PrivacySettings.GroupAdd:type_name -> neonize.PrivacySettings.PrivacySetting
	6,  // 73: neonize.PrivacySettings.LastSeen:type_name -> neonize.PrivacySettings.PrivacySetting
	6,  // 74: neonize.PrivacySettings.Status:type_name -> neonize.PrivacySettings.PrivacySetting
	6,  // 75: neonize.PrivacySettings.Profile:type_name -> neonize.PrivacySettings.PrivacySetting
	6,  // 76: neonize.PrivacySettings.ReadReceipts:type_name -> neonize.PrivacySettings.PrivacySetting
	6,  // 77: neonize.PrivacySettings.CallAdd:type_name -> neonize.PrivacySettings.PrivacySetting
	6,  // 78: neonize.PrivacySettings.Online:type_name -> neonize.PrivacySettings.PrivacySetting
	79, // [79:79] is the sub-list for method output_type
	79, // [79:79] is the sub-list for method input_type
	79, // [79:79] is the sub-list for extension type_name
	79, // [79:79] is the sub-list for extension extendee
	0,  // [0:79] is the sub-list for field type_name
}

func init() { file_Neonize_proto_init() }
func file_Neonize_proto_init() {
	if File_Neonize_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Neonize_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceSentMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifiedName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsOnWhatsAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupLocked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupAnnounce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupEphemeral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupIncognito); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupParent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupLinkedParent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupIsDefaultSub); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupParticipantAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupParticipant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageDebugTimings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInfoReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupWithLinkReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInviteLinkReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupPhotoReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsOnWhatsAppReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoSingleReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildPollVoteReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewsLetterReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlocklistReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactQRLinkReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupRequestParticipantsReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJoinedGroupsReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JIDArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsLetterMessageMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewsletterParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WrappedNewsletterState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsletterText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfilePictureInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsletterReactionSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsletterSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsletterThreadMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsletterViewerMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsletterMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blocklist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsletterMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewsletterMessageUpdateReturnFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Neonize_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivacySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Neonize_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Neonize_proto_goTypes,
		DependencyIndexes: file_Neonize_proto_depIdxs,
		EnumInfos:         file_Neonize_proto_enumTypes,
		MessageInfos:      file_Neonize_proto_msgTypes,
	}.Build()
	File_Neonize_proto = out.File
	file_Neonize_proto_rawDesc = nil
	file_Neonize_proto_goTypes = nil
	file_Neonize_proto_depIdxs = nil
}
